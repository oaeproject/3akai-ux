/*!
 * Copyright 2014 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

define(['jquery', 'oae.core'], function($, oae) {

    return function(uid, showSettings) {

        // The widget container
        $rootel = $('#' + uid);

        // Cache data used inside of the widget
        var widgetData = null;


        ///////////////
        // UTILITIES //
        ///////////////

        /**
         * Reset the widget to its original state
         */
        var reset = function() {
            // Reset all the forms
            $('form', $rootel).each(function(i, form) {
                // Reset the form
                $(form)[0].reset();
                // Clear the validation messages from the form
                oae.api.util.validation().clear(form);
            });

            // Show the first tab
            $('#manageuser-tab-container ul li:first-child a').click();
        };


        /////////////////////
        // EDIT PRIVILIGES //
        /////////////////////

        /**
         * Edit a user's priviliges
         *
         * @return {Boolean}    return `false` to prevent default form behaviour
         */
        var editPriviliges = function() {
            var url = '/api/user/' + widgetData.userProfile.id + '/admin';
            if (widgetData.context.isGlobalAdminServer) {
                url = '/api/user/' + widgetData.userProfile.id + '/globaladmin';
            }
            $.ajax({
                'url': url,
                'type': 'POST',
                'data': {
                    'admin': $('#manageuser-priviliges-isadmin', $rootel).is(':checked')
                },
                'success': function() {
                    // Hide the modal after saving
                    $('#manageuser-modal', $rootel).modal('hide');

                    // Show a success notification
                    oae.api.util.notification(
                        oae.api.i18n.translate('__MSG__PRIVILIGES_EDITED__', 'manageuser'),
                        oae.api.i18n.translate('__MSG__PRIVILIGES_EDIT_SUCCESS__', 'manageuser'));
                },
                'error': function() {
                    // Show an error notification
                    oae.api.util.notification(
                        oae.api.i18n.translate('__MSG__PRIVILIGES_NOT_EDITED__', 'manageuser'),
                        oae.api.i18n.translate('__MSG__PRIVILIGES_EDIT_FAILED__', 'manageuser'),
                        'error');
                }
            });

            return false;
        };

        /**
         * Set up the edit priviliges form
         */
        var setUpEditPriviligesForm = function() {
            oae.api.util.template().render($('#manageuser-priviliges-template', $rootel), {
                'userProfile': widgetData.userProfile,
                'context': widgetData.context
            }, $('#manageuser-priviliges-form .modal-body', $rootel));

            $rootel.one('submit', '#manageuser-priviliges-form', editPriviliges);
        };


        //////////////////
        // EDIT PROFILE //
        //////////////////

        /**
         * Edit a user's profile information
         *
         * @return {Boolean}    return `false` to prevent default form behaviour
         */
        var editProfile = function() {
            var params = {
                'displayName': $.trim($('#manageuser-editprofile-name', $rootel).val()),
                'email': $.trim($('#manageuser-editprofile-email', $rootel).val()),
                'visibility': $('.oae-large-options-container input[type="radio"]:checked', $rootel).val()
            };

            oae.api.user.updateUser(widgetData.userProfile.id, params, function (err, data) {
                if (!err) {
                    // Hide the modal after saving
                    $('#manageuser-modal', $rootel).modal('hide');

                    // Show a success notification
                    oae.api.util.notification(
                        oae.api.i18n.translate('__MSG__PROFILE_EDITED__'),
                        oae.api.i18n.translate('__MSG__PROFILE_DETAILS_EDIT_FOR_USER_SUCCESS__', 'manageuser'));
                } else {
                    // Show an error notification
                    oae.api.util.notification(
                        oae.api.i18n.translate('__MSG__PROFILE_NOT_EDITED__'),
                        oae.api.i18n.translate('__MSG__PROFILE_DETAILS_EDIT_FOR_USER_FAIL__', 'manageuser'),
                        'error');
                }
            });

            return false;
        };

        /**
         * Set up the validation for the edit profile form
         */
        var setUpEditProfileValidation = function() {
            var validateOpts = {
                'submitHandler': editProfile
            };
            oae.api.util.validation().validate($('#manageuser-editprofile-form', $rootel), validateOpts);
        };

        /**
         * Render the edit profile form and add validation
         */
        var setUpEditProfileForm = function() {
            oae.api.util.template().render($('#manageuser-editprofile-template', $rootel), {
                'userProfile': widgetData.userProfile
            }, $('#manageuser-editprofile-form .modal-body', $rootel));

            // Catch changes in the visibility radio group
            $rootel.one('change', '.oae-large-options-container input[type="radio"]', function() {
                $('.oae-large-options-container label', $rootel).removeClass('checked');
                $(this).parents('label').addClass('checked');
            });

            // Set up the profile validation
            setUpEditProfileValidation();
        };

        /////////////////////
        // CHANGE PASSWORD //
        /////////////////////

        /**
         * Change a user's password
         *
         * @return {Boolean}    return `false` to prevent default form behaviour
         */
        var changePassword = function() {
            var oldPassword = $('#manageuser-current-password', $rootel).val();
            var newPassword = $('#manageuser-new-password', $rootel).val();

            oae.api.authentication.changePassword(widgetData.userId, null, newPassword, function(err) {
                if (err) {
                    if (err.code === 400) {
                        // The user has a non-local account
                        oae.api.util.notification(
                            oae.api.i18n.translate('__MSG__PASSWORD_NOT_UPDATED__'),
                            oae.api.i18n.translate('__MSG__THIS_USERS_PASSWORD_CANNOT_BE_CHANGED_HERE__', 'manageuser'),
                            'error'
                        );
                    } else {
                        // Show a generic failure notification
                        oae.api.util.notification(
                            oae.api.i18n.translate('__MSG__PASSWORD_NOT_UPDATED__'),
                            oae.api.i18n.translate('__MSG__PASSWORD_UPDATE_FOR_USER_FAILED__', 'manageuser'),
                            'error'
                        );
                    }
                } else {
                    // Hide the modal after saving
                    $('#manageuser-modal', $rootel).modal('hide');

                    // Show a success notification
                    oae.api.util.notification(
                        oae.api.i18n.translate('__MSG__PASSWORD_UPDATED__'),
                        oae.api.i18n.translate('__MSG__PASSWORD_FOR_USER_SUCCESSFULLY_UPDATED__', 'manageuser')
                    );
                }
            });

            return false;
        };

        /**
         * Set up the validation for the change password form
         */
        var setUpChangePasswordValidation = function() {
            oae.api.util.validation().validate($('#manageuser-password-form', $rootel), {
                'rules': {
                    'manageuser-new-password': {
                        'minlength': 6
                    },
                    'manageuser-retype-password': {
                        'equalTo': '#manageuser-new-password'
                    }
                },
                'messages': {
                    'manageuser-new-password': {
                        'required': oae.api.i18n.translate('__MSG__PLEASE_ENTER_YOUR_PASSWORD__'),
                        'minlength': oae.api.i18n.translate('__MSG__YOUR_PASSWORD_SHOULD_BE_AT_LEAST_SIX_CHARACTERS_LONG__')
                    },
                    'manageuser-retype-password': {
                        'required': oae.api.i18n.translate('__MSG__PLEASE_REPEAT_YOUR_PASSWORD__'),
                        'passwordmatch': oae.api.i18n.translate('__MSG__THIS_PASSWORD_DOES_NOT_MATCH_THE_FIRST_ONE__')
                    }
                },
                'submitHandler': changePassword
            });
        };


        ////////////////////
        // INITIALIZATION //
        ////////////////////

        /**
         * Sets up the manageuser modal
         */
        var setUpManageUserModal = function() {
            $(document).on('oae.trigger.manageuser', function(ev, data) {
                widgetData = data;
                $('#manageuser-modal', $rootel).modal({
                    'backdrop': 'static'
                });
            });

            // Retrieve user information when the modal is triggered
            $(document).on('show.bs.modal', '#manageuser-modal', function() {
                oae.api.user.getUser(widgetData.userId, function(err, userProfile) {
                    widgetData.userProfile = userProfile;

                    setUpChangePasswordValidation();
                    setUpEditProfileForm();
                    setUpEditPriviligesForm();
                });
            });

            // Retrieve user information when the modal is triggered
            $('#manageuser-modal').on('hidden.bs.modal', reset);
        };

        setUpManageUserModal();

    };
});

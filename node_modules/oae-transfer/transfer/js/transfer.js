/*!
 * Copyright 2017 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the 'License'); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an 'AS IS'
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

define(['jquery', 'oae.core'], function ($, oae) {

    return function (uid) {

        // The widget container
        var $rootel = $('#' + uid);

        // Holds the current state of the user profile as it is updated
        var profile = _.extend({}, oae.data.me);

        var getFormChangeEventNames = oae.api.util.getFormChangeEventNames();

        /**
         * Initialize the main panel
         */
        var initMainPanel = function() {
            $('#transfer-generate-code-tab', $rootel).addClass('active');
            $('#transfer-generate-code-tab', $rootel).show();
            $('#transfer-tab-container', $rootel).show();
            showMainPanel();
        };

        /**
         * Show the main panel
         */
        var showMainPanel = function() {    
            renderTransferPanel();
            $('#transfer-already-generate-form').hide();
            $('#transfer-generate-code-form').show();
            $('#transfer-generate-code-container', $rootel).addClass('active');
            $('#transfer-generate-code-container', $rootel).show();

            $('#transfer-modal', $rootel).modal('show');
        };

        /**
         * Hide the main panel
         */
        var hideMainPanel = function() {    
            $('#transfer-generate-code-container', $rootel).removeClass('active');
            $('#transfer-generate-code-container', $rootel).hide();
        };

        /**
         * Show the activation transfer panel
         */
        var showActivationTransferPanel = function() {
            $('#transfer-run-transfer-container', $rootel).addClass('active');
            $('#transfer-run-transfer-container', $rootel).show();
        }; 

        /**
         * Hide the activation transfer panel
         */
        var hideActivationTransferPanel = function() {
            $('#transfer-run-transfer-container', $rootel).removeClass('active');
            $('#transfer-run-transfer-container', $rootel).hide();
        };

        /**
         * Verify the user has already started a transfer procedure
         */
        var showCodeIfTransferCreated = function() {
            oae.api.transfer.getTransferById(profile.id, function(err, data) {
                if (!data || data === undefined || data.status === 'canceled') {
                    $('#transfer-already-generate-form').hide();
                    $('#transfer-generate-code-form').show();
                } else {
                    $('#transfer-code-container h3').html(data.code);
                    $('#transfer-already-generate-form').show();
                    $('#transfer-generate-code-form').hide();
                }
            });
        };

        /**
         * Verify the user has already started a transfer procedure
         */
        var toggleSubmitButton = function(submitButton, disabled) {
            if (submitButton === 'transfer') {
                $('#transfer-make-transfer-form button[type="submit"]', $rootel).prop('disabled', disabled);
            } else if (submitButton === 'generate') {
                $('#transfer-generate-code-form button[type="submit"]', $rootel).prop('disabled', disabled);
            }
        };

        /**
         * Render the edit 'transfer' panel 
         */
        var renderTransferPanel = function() {
            // Check if the tenant alow his users to make transfer 
            var allowTransfer = oae.api.config.getValue('oae-transfer', 'allow', 'transfer');

            if (allowTransfer === 'yes') {
                allowTransfer = true;
            } else {
                allowTransfer = false;
            }

            // Get the TTL of the transfer to informe the user
            var timeTransfer = oae.api.config.getValue('oae-transfer', 'TTL', 'value');

            oae.api.util.template().render($('#transfer-generate-code-template', $rootel), {
                'allowTransfer': allowTransfer,
                'timeTransfer': timeTransfer
            }, $('#transfer-generate-code-container', $rootel));
            oae.api.util.template().render($('#transfer-run-transfer-template', $rootel), {}, $('#transfer-run-transfer-container', $rootel));

            // Look at if the user has already created a transfer, if yes, show the transfer code
            showCodeIfTransferCreated();

            $('#transfer-generate-code-form', $rootel).on(getFormChangeEventNames, function() {
                var originalEmailIsValid = oae.api.util.validation().isValidEmail($('#user-autosuggest').val());
                if (originalEmailIsValid) {
                    toggleSubmitButton('generate', false);
                }
                else{
                    toggleSubmitButton('generate', true);
                }                
            });

            $('#transfer-make-transfer-form', $rootel).on(getFormChangeEventNames, function() {
                var originalEmailIsValid = oae.api.util.validation().isValidEmail($('#transfer-original-email-is-valide').val());
                if ($('#code').val().length == 20 && originalEmailIsValid) {
                    toggleSubmitButton('transfer', false);
                }
                else{
                    toggleSubmitButton('transfer', true);
                }                
            });
        };

        /**
         * Reset the widget to its original state when the modal dialog is opened and closed
         */
        var setUpReset = function() {
            $('form', $rootel).each(function(i, form) {
                // Reset the form
                form.reset();
                // Clear the validation messages from the form
                oae.api.util.validation().clear(form);
            });

            // Deactivate all the tabs and tab panels
            $('#transfer-tab-container ul li', $rootel).removeClass('active');
            $('form', $rootel).removeClass('active');

            // Enable the form
            $('#transfer-form *', $rootel).prop('disabled', false);
            $('#transfer-form button[type="submit"]', $rootel).prop('disabled', true);
        };

        /**
         * Apply the tabs listeners 
         */
        var setUpModalListeners = function() {

            $(document).on('click', '.oae-trigger-transfer', function() {
                $('#transfer-modal', $rootel).modal({
                    'backdrop': 'static'
                });
                initMainPanel();
            });

            $('#transfer-modal', $rootel).on('hidden.bs.modal', setUpReset);

            // Switch panel
            $(document).on('click', '#transfer-generate-code-tab', function() {
                hideActivationTransferPanel();
                showMainPanel();
            });

            $(document).on('click', '#transfer-run-transfer-tab', function() {
                hideMainPanel();
                showActivationTransferPanel();
            });
        };

        /**
         * Bind all the action listeners needed for the user to interact with the 'transfer' panel in
         */
        var bindTransferListeners = function() {

            // When the user validates the form to generate the code
            $rootel.on('click', '#transfer-generate-code-btn', function(e) {
                // Avoid the reload
                e.preventDefault();
                initiateTransfer(function(err) {
                    // To be sure that we wait the insert of transfer before trying to make a get on it
                    setTimeout(function() {
                        showCodeIfTransferCreated();
                    }, 100);
                    // Avoid default form submit behavior
                    return false;
                });
            });

            // When the user validates the for do make a transfer
            $rootel.on('click', '#transfer-make-transfer-btn', function(e) {
                // Avoid the reload
                e.preventDefault();
                completeTransfer(function(err) {
                    // To be sure that we wait the insert of transfer before trying to make a get on it
                    setTimeout(function() {
                        $('#transfer-modal', $rootel).modal('hide');
                    }, 100);
                    // Avoid default form submit behavior
                    return false;
                });
            });

            // When the user click on cancel transfer
            $rootel.on('click', '#transfer-code-cancel-transfer-btn', function() {
                cancelTransfer(function(err) {
                    // Avoid default form submit behavior
                    return false;
                });
            });
        };

        // Access to API

        /**
        * When the user click on validate in the generate code panel
        */
        var initiateTransfer = function(callback) {
            // Get all necessary data            
            var originalEmail = profile.email;
            var originalUserId = profile.id;
            var targetEmail = $.trim($('#user-autosuggest', $rootel).val());

            oae.api.transfer.initiateTransfer(originalEmail, targetEmail, originalUserId, function(err, data) {
                if (!err) {
                    // Show a success notification
                    oae.api.util.notification(
                        oae.api.i18n.translate('__MSG__TRANSFER_CREATED__', 'preferences'),
                        oae.api.i18n.translate('__MSG__YOUR_TRANSFER_IS_CREATED__', 'preferences')
                    );
                } else {
                    // Show a generic failure notification
                    oae.api.util.notification(
                        oae.api.i18n.translate('__MSG__TRANSFER_CREATION_FAILED__'),
                        oae.api.i18n.translate('__MSG__YOUR_TRANSFER_IS_NOT_CREATED__', 'preferences'),
                        'error'
                    );
                }
            }); 
            return callback();
        };

        /**
         * Make the transfer
         */
        var completeTransfer = function(callback) {
            // Get all necessary data            
            var targetEmail = profile.email;
            var code = $.trim($('#code', $rootel).val());
            var originalEmail = $.trim($('#transfer-original-email-is-valide', $rootel).val());
            var targetUserId = profile.id;

            oae.api.transfer.completeTransfer(originalEmail, code, targetEmail, targetUserId, function(err, data) {
                if (!err) {
                    // Show a success notification
                    oae.api.util.notification(
                        oae.api.i18n.translate('__MSG__TRANSFER_SUCCESSED__', 'preferences'),
                        oae.api.i18n.translate('__MSG__YOUR_TRANSFER_SUCCESSED__', 'preferences')
                    );
                } else if (err.code === 404) {
                    // There is no data to transfer
                    oae.api.util.notification(
                        oae.api.i18n.translate('__MSG__TRANSFER_FAILED__'),
                        oae.api.i18n.translate('__MSG__YOUR_TRANSFER_FAILED_NO_DATA_TO_TRANSFER__', 'preferences'),
                        'error'
                    );
                } else if (err.code === 412) {
                    // There is no data to transfer
                    oae.api.util.notification(
                        oae.api.i18n.translate('__MSG__TRANSFER_FAILED__'),
                        oae.api.i18n.translate('__MSG__YOUR_TRANSFER_FAILED_INVALID_TOKEN__', 'preferences'),
                        'error'
                    );
                } else {
                    // Show a generic failure notification
                    oae.api.util.notification(
                        oae.api.i18n.translate('__MSG__TRANSFER_FAILED__'),
                        oae.api.i18n.translate('__MSG__YOUR_TRANSFER_FAILED__', 'preferences'),
                        'error'
                    );
                }
            }); 
            return callback();
        };

        /**
         * Cancel the transfer from the database
         */
        var cancelTransfer = function(callback) {
            // Get all necessary data            
            var originalEmail = profile.email;
            var code = $('#transfer-code-generated').text();
            var originalUserId = profile.id;

            oae.api.transfer.cancelTransfer(originalEmail, code, originalUserId, function(err, data) {
                if (!err) {
                    // reloadPanel
                    showCodeIfTransferCreated();
                    // Show a success notification
                    oae.api.util.notification(
                        oae.api.i18n.translate('__MSG__TRANSFER_CANCELLED__', 'preferences'),
                        oae.api.i18n.translate('__MSG__YOUR_TRANSFER_HAS_BEEN_CANCELLED__', 'preferences')
                    );
                } else {
                    // Show a generic failure notification
                    oae.api.util.notification(
                        oae.api.i18n.translate('__MSG__TRANSFER_CANCEL_FAILED__'),
                        oae.api.i18n.translate('__MSG__YOUR_TRANSFER_CANCEL_HAS_FAILED__', 'preferences'),
                        'error'
                    );
                }
            }); 
            return callback();
        };

        setUpReset();
        setUpModalListeners();
        bindTransferListeners();
    };
});

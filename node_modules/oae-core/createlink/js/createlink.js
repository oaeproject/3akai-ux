/*!
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

define(['jquery', 'oae.core', 'jquery.jeditable'], function($, oae) {

    return function(uid, showSettings) {

        $rootel = $('#' + uid);

        var linkRegExp = /^(https?|s?ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i;

        var selectedLinks = [];

        /**
         * Resets the state of the widget when the modal dialog has been closed
         */
        var doReset = function() {
            // Hide all steps
            $('.modal-body > div', $rootel).hide();

            // Show the first step
            $('.modal-body > div[data-step="1"]', $rootel).show();

            // Reset the selected links list
            selectedLinks = [];

            // Reset controls
            $('#createlink-next', $rootel).attr('disabled', 'disabled');
            $('#createlink-next', $rootel).show();
            $('#createlink-link-dump', $rootel).val('');
            $('#createlink-finish', $rootel).hide();
            $('#createlink-visibility', $rootel).hide();
            $('#createlink-doupload', $rootel).hide();
            $('#createlink-doupload', $rootel).removeAttr('disabled');
            $('#createlink-finish', $rootel).hide();

            // Reset the progress bar
            $('.progress', $rootel).hide();
            $('.bar', $rootel).css('width', '0%');
        };

        /**
         * Binds and executes the widget reset function when the modal dialog is closed
         */
        var initReset = function() {
            $('#createlink-container', $rootel).on('hidden', function(ev) {
                if ($(ev.target).hasClass('oae-modal')) {
                    doReset();
                }
            });
        };

        /**
         * Verifies and returns that a URL is valid or not
         * @param  {String}   url   String to be tested as url
         */
        var isValidURL = function(url) {
            var urlRegex = new RegExp(linkRegExp);
            return urlRegex.test(url);
        };

        /**
         * Renders a list of the selected links to create
         */
        var renderSelected = function() {
            oae.api.util.template().render('#createlink-selected-template', {'links': selectedLinks}, $('#createlink-selected-container'));

            /**
             * Saves the edited link name to the appropriate item in the Array of selected links
             * @param   {String}   value   The new value for the item
             * @return  {String}   value   The value to show in the editable field after editing completed
             */
            var editableSubmitted = function(value) {
                var prevValue = this.revert;
                var $listItemContainer = $($(this).parents('.oae-listitem'));
                if (!value) {
                    return prevValue;
                } else {
                    $.each(selectedLinks, function(index, file) {
                        if (file.displayName === prevValue) {
                            $listItemContainer.attr('data-name', value);
                            $listItemContainer.find('.btn.createlink-trash-selected').attr('data-name', value);
                            file.displayName = value;
                        }
                    });
                    return value;
                }
            };

            // Apply jEditable for inline editing of link names
            $('.jeditable-field').editable(editableSubmitted, {
                'onblur': 'submit'
            });

            // Apply jQuery Tooltip
            $('[rel="tooltip"]', $rootel).tooltip();
        };

        /**
         * Adds selected links to the list of links to create if it is not a duplicate.
         * @param  {String}   url   The link to be created
         */
        var addToSelected = function(url) {
            var dupe = false;
            $.each(selectedLinks, function(index, link) {
                if (link.displayName === url) {
                    dupe = true;
                }
            });

            if (dupe) {
                return false;
            }

            // Create the link object
            var linkObj = {
                'link': url,
                'displayName': url,
                'description': '',
                'visibility': oae.api.config.getValue('oae-content', 'visibility', 'links'),
                'type': 'link'
            };

            // Add the link to the queue
            selectedLinks.push(linkObj);
        };

        /**
         * Removes a selected link from the list and resets the widget when no links remain
         */
        var initDeleteFromSelected = function() {
            $rootel.on('click', '.createlink-trash-selected', function(ev) {
                var toTrash = $(this).attr('data-name');
                $.each(selectedLinks, function(index, link) {
                    if (link.displayName === toTrash) {
                        selectedLinks.splice(index, 1);
                        $(ev.target).parents('.oae-list-item').remove();
                        if (!selectedLinks.length) {
                            doReset();
                        }
                        return false;
                    }
                });
            });
        };

        /**
         * Triggers the necessary changes when members of the links to be created have been changed.
         */
        var initShareChanged = function() {
            $(document).on('oae-trigger-setpermissionsshared', function(ev, data) {
                $.each(selectedLinks, function(index, file) {
                    file.viewers = data.viewers;
                });
            });
        };

        /**
         * Triggers the necessary changes when permissions for the links to be created have been changed.
         */
        var initPermissionsChanged = function() {
            $(document).on('oae-trigger-setpermissionschanged', function(ev, data) {
                $.each(selectedLinks, function(index, file) {
                    file.visibility = data.visibility;
                });
            });
        };

        /**
         * The widget guides the user through several steps before uploading the selected files.
         * This function shows the next step in the widget
         */
        var nextStep = function() {
            // Check which step we completed and calculate the current and next step
            var completedStep = parseInt($('.modal-body > div:visible', $rootel).attr('data-step'));
            var currentStep = completedStep + 1;
            var nextStep = currentStep + 1;

            // Hide all steps
            $('.modal-body > div', $rootel).hide();

            // Show the current step
            $('.modal-body > div[data-step="' + currentStep + '"]', $rootel).show();

            // Check if there is a next step or if we should start uploading files
            if (!$('.modal-body > div[data-step="' + nextStep + '"]', $rootel).length) {
                $('#createlink-visibility', $rootel).show();
                $('#createlink-doupload', $rootel).show();
                $('#createlink-next').hide();
                $(document).trigger('oae-trigger-setpermissions', {
                    'viewers': [],
                    'visibility': oae.api.config.getValue('oae-content', 'visibility', 'links'),
                    'target': $('#createlink-permissions-container', $rootel)
                });
            }
        };

        /**
         * When going to the next step the entered links will be validated and sent through to the next step
         */
        var initNextStep = function() {
            $('#createlink-next').on('click', function() {
                // Split out the textarea into an Array of links
                var links = $('#createlink-link-dump', $rootel).val().split('\n');

                // Loop over the links and validate them before adding them to the queue
                $.each(links, function(index, link) {
                    if (link && isValidURL(link)) {
                        addToSelected(link);
                    }
                });

                // If there was at least one valid link go to the next step
                if (selectedLinks.length) {
                    renderSelected();
                    nextStep();
                }
            });
        };

        /**
         * Updates the progress indicator
         * @param  {Number}   progress   Number between 0 and 100 indicating the upload progress
         */
        var updateProgress = function(progress) {
            $('.bar', $rootel).css('width', progress + '%');
        };

        /**
         * Starts the link creation process.
         */
        var initLinkCreation = function() {
            $('#createlink-doupload').off('click').on('click', function() {
                var done = 0;

                $('.progress', $rootel).show();
                $('#createlink-doupload').attr('disabled', 'disabled');
                $('.createlink-trash-selected').attr('disabled', 'disabled');
                $('#createlink-permissions-container *').attr('disabled', 'disabled');

                var doUpload = function(link) {
                    if (link) {
                        $('div[data-name="' + link.displayName + '"] .icon-spinner', $rootel).show();
                        oae.api.content.createLink(link.displayName, link.description, link.visibility, link.link, [], link.viewers, function(error, data) {
                            $('div[data-name="' + link.displayName + '"] .icon-spinner', $rootel).hide();
                            if (!error) {
                                $('div[data-name="' + link.displayName + '"] .icon-ok', $rootel).show();
                            } else {
                                $('div[data-name="' + link.displayName + '"] .icon-warning-sign', $rootel).show();
                            }

                            done++;
                            if (done !== selectedLinks.length) {
                                updateProgress((done / selectedLinks.length) * 100);
                                doUpload(selectedLinks[done]);
                            } else {
                                $(window).trigger('done.addcontent.oae');
                                $('#createlink-doupload').hide();
                                $('#createlink-finish').show();
                                updateProgress(100);
                            }
                        });
                    }
                };

                doUpload(selectedLinks[0]);
            });
        };

        /**
         * Handles changes in the link dump textarea. If no links are pasted into the area the `next` button will be disabled.
         */
        var initLinkDump = function() {
            $('#createlink-link-dump').on('keyup paste', function(ev) {
                // The paste event fires before the textarea values changes so we add a small timeout
                setTimeout(function () {
                    // Split out the textarea into an Array of links
                    var links = $('#createlink-link-dump', $rootel).val().split('\n');

                    // Loop over the links and validate them
                    var valid = false;
                    $.each(links, function(index, link) {
                        if (link && isValidURL(link)) {
                            valid = true;
                        }
                    });

                    if (valid) {
                        $('#createlink-next', $rootel).removeAttr('disabled');
                    } else {
                        $('#createlink-next', $rootel).attr('disabled', 'disabled');
                    }
                }, 100);
            });
        };

        /**
         * Initializes the create link modal dialog
         */
        var initLinkModal = function() {
            $(document).on('click', '.oae-trigger-createlink', function() {
                $('#createlink-container', $rootel).modal({
                    'backdrop': 'static'
                });
            });
        };

        initReset();
        initNextStep();
        initShareChanged();
        initPermissionsChanged();
        initDeleteFromSelected();
        initLinkDump();
        initLinkModal();
        initLinkCreation();

    };
});

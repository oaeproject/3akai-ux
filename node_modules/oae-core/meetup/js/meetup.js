/*!
 * Copyright 2014 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

define(['jquery', 'oae.core'], function($, oae) {

    return function(uid, showSettings, widgetData) {

  	    // The widget container
        var $rootel = $('#' + uid);

        /**
         * Render the meeting description
         */
        var renderMeetup = function(meetup) {
            console.info("Rendering meetup");
            console.info(meetup);
            console.info(meetup.context.id);
            // Insert an iframe
            /**
             * Trigger the managemeeting action for joining the meetup
             */
            console.info('Joining meeting 3');
            var html_meetup_iframe = '<button class="btn btn-link meeting-trigger-managemeeting-refresh" title="Refresh meeting"><i class="fa fa-refresh pull-left"></i></button>';
            $('#meeting-iframe', $rootel).html(html_meetup_iframe);
            window.open('/api/meetups/' + meetup.context.id + '/join', 'meetup-iframe');

            var html_meeting_actionbar_end = '';
            if (meetup.canManage) {
                html_meeting_actionbar_end = '<button class="meeting-trigger-managemeeting-end"><i class="fa fa-minus-square pull-left oae-hide-when-anonymous"></i>' + oae.api.i18n.translate('__MSG__MEETUP_END__', 'meetup') + '</button>';
            }
            $('#meeting-actionbar-end', $rootel).html(html_meeting_actionbar_end);

            /**
            * Trigger the managemeeting action for ending the meeting
            */
            $(document).on('click', '.meeting-trigger-managemeeting-end', function() {
                console.info('Ending meetup');
                endMeetup(meetup.context.id, function(err) {
                });
                $('#meeting-actionbar-end').html('');
            });

            //$('#meetup-iframe').html('<iframe name="meetup-iframe"></iframe>');
            //$(document).trigger('oae.trigger.managemeeting-join', meetingProfile);
        };

        /**
         * Subscribe to meetup activity push notifications, allowing for updating the meetup profile when changes to the meetup
         * are made by a different user after the initial page load
         */
        var setUpPushNotifications = function(meetup) {
            oae.api.push.subscribe(meetup.context.id, 'activity', meetup.context.signature, 'internal', false, false, function(activities) {
                // The `activity` stream pushes out activities on routing so it's always
                // safe to just pick the first item from the `activities` array
                var activity = activities[0];

                // Only respond to push notifications caused by other users
                if (activity['oae:activityType'] === 'meetup-end' || activity.actor.id === oae.data.me.id && activity['oae:activityType'] === 'meetup-close') {
                    window.location.href = meetup.context.profilePath;
                }
            });
        };

        var endMeetup = function(meetupId, callback) {
            if (!meetupId) {
                throw new Error('A valid meetup id should be provided');
            }

            // Set a default callback function in case no callback function has been provided
            callback = callback || function() {};

            $.ajax({
                'url': '/api/meetups/' + meetupId + '/end',
                'type': 'POST',
                'success': function(data) {
                    callback(null);
                },
                'error': function(jqXHR, textStatus) {
                    callback({'code': jqXHR.status, 'msg': jqXHR.responseText});
                }
            });
        };

        /**
         * Initialize the meetup description and add a binding for description updates
         */
        var initMeetup = function() {
            if (widgetData) {
                console.info('Widget init');
                renderMeetup(widgetData);
                setUpPushNotifications(widgetData);
            }
        };

        initMeetup();
        console.info('Meetup shown');
    };
});

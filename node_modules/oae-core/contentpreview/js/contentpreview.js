/*!
 * Copyright 2013 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

define(['jquery', 'oae.core', '/node_modules/oae-core/contentpreview/lib/document-viewer/assets/viewer.js'], function($, oae, DV) {

    return function(uid, showSettings, widgetData) {

        // Cache the widget container
        var $rootel = $('#' + uid);

        /**
         * Render an image preview by embedding the image into the document
         */
        var renderImagePreview = function() {
            oae.api.util.template().render($('#contentpreview_image_template', $rootel), widgetData, $('#contentpreview_preview', $rootel));
        };

        /**
         * Render a link's preview in an iFrame
         */
        var renderLinkPreview = function() {
            oae.api.util.template().render($('#contentpreview_html_template', $rootel), widgetData, $('#contentpreview_preview', $rootel));
        };

        /**
         * Render a collaborative document.
         */
        var renderCollaborativeDocument = function() {
            oae.api.widget.insertWidget('etherpad', null, $('#contentpreview_preview', $rootel), null, widgetData);
        };

        /**
         * Render a PDF or Office Document
         */
        var renderDocumentPreview = function() {
            var doc = {
                'id': widgetData.id,
                'title': widgetData.displayName,
                'pages': widgetData.previews.pageCount,
                'resources': {
                    'pdf': '/api/content/' + widgetData.id + '/download',
                    'page': {
                        'image': '/api/content/' + widgetData.id + '/revisions/' + widgetData.latestRevisionId + '/previews/page.{page}.{size}.png?signature=' + widgetData.signature.signature + '&expires=' + widgetData.signature.expires + '&lastmodified=' + widgetData.signature.lastModified
                    }
                }
            };
            DV.load(doc, {
                'container': '#' + uid + ' #contentpreview_preview',
                'width': '100%',
                'height': 700,
                'sidebar': false,
                'text': false
            });
        };

        /**
         * Render the default preview for all files that don't have a particular in-line preview
         */
        var renderDefault = function() {
            oae.api.util.template().render($('#contentpreview_default_template', $rootel), widgetData, $('#contentpreview_preview', $rootel));
        };

        /**
         * Decide what type of preview to render based on the content type, mimetype and previews data
         */
        var initPreview = function() {
            // Links
            if (widgetData.resourceSubType === 'link') {
                renderLinkPreview();
            // Collaborative documents
            } else if (widgetData.resourceSubType === 'collabdoc') {
                renderCollaborativeDocument();
            // Uploaded files
            } else if (widgetData.resourceSubType === 'file') {
                // Image preview
                if (widgetData.mime.substring(0, 6) === 'image/') {
                    renderImagePreview();
                // Display PDFs, Office files, ..
                } else if (widgetData.previews.hasOwnProperty('pageCount')) {
                    renderDocumentPreview();
                // Default preview
                } else {
                    renderDefault();
                }
            }
        };

        initPreview();
    };
});

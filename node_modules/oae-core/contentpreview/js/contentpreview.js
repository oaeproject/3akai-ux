/*!
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

define(['jquery', 'oae/api/oae.core'], function($, oae) {

    return function(uid, showSettings, widgetData) {

        // Cache the widget container
        var $rootel = $('#' + uid);

        /**
         * Render an image preview by embedding the image into the document
         */
        var renderImagePreview = function() {
            oae.api.util.renderTemplate($('#contentpreview_image_template', $rootel), widgetData, $('#contentpreview_preview', $rootel));
        };

        /**
         * Render a link's preview in an iFrame
         */
        var renderLinkPreview = function() {
            oae.api.util.renderTemplate($('#contentpreview_html_template', $rootel), widgetData, $('#contentpreview_preview', $rootel));
        };

        /**
         * Render the default preview for all files that don't have a particular in-line preview
         */
        var renderDefault = function() {
            oae.api.util.renderTemplate($('#contentpreview_default_template', $rootel), widgetData, $('#contentpreview_preview', $rootel));
        };

        /**
         * Decide what type of preview to render based on the content type and mimetype
         */
        var initPreview = function() {
            // Links
            if (widgetData.contentType === 'link') {
                renderLinkPreview();
            // Uploaded files
            } else if (widgetData.contentType === 'file') {
                // Image preview
                if (widgetData.mime.substring(0, 6) === 'image/') {
                    renderImagePreview();
                // Default preview
                } else {
                    renderDefault();
                }
            }
        }

        initPreview();

    };
});
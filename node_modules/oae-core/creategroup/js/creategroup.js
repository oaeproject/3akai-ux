/*!
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

define(['jquery', 'oae/api/oae.core'], function($, oae) {

    return function(uid) {

        var $rootel = $('#' + uid);

        // Variable that will be used to cache the progress indicator shown whilst
        // a group is being created
        var progressIndicator = null;

        /**
         * Set up the validation on the create form, including the error messages
         */
        var setUpValidation = function() {
            var validateOpts = {
                'methods': {
                    'uniquegroupname': {
                        'method': isGroupAliasAvailable,
                        'text': oae.api.i18n.translate('__MSG__THIS_GROUP_HAS_BEEN_TAKEN__', 'creategroup')
                    }
                },
                'insertAfterLabel': true,
                'submitHandler': createGroup
            };
            oae.api.util.validation().validate($('#creategroup_group_form', $rootel), validateOpts);
        };

        /**
         * Verify whether or not the entered group URL already exists as a groupd id on the
         * current tenant. This will happen synchronously as part of the form validation
         * 
         * @return {Boolean}            Whether or not the entered URL is still available as a group alias
         */
        var isGroupAliasAvailable = function() {
            // If we reach this point, we have a group alias in a valid format.
            var alias = $.trim($('#creategroup_suggested_url').val());
    
            // We check if the userid is still available on the current tenant. 
            // We expect a 200 if it already exists and a 404 if it doesn't exist yet.
            var available = false;
            $.ajax({
                url: '/api/group/exists/' + alias,
                async: false,
                success: function() {
                    available = false;
                },
                error: function(xhr, textStatus) {
                    available = true;
                }
            });
            return available;
        };

        /**
         * Attempt to create the group. First of all, a progress indicator will be shown. Next, the form
         * values will be retrieved and the group will be created
         */
        var createGroup = function() {
            // Show the progress indicator
            if (!progressIndicator) {
                var title = oae.api.i18n.translate('__MSG__CREATING_YOUR_GROUP__', 'creategroup');
                var description = oae.api.i18n.translate('__MSG__PROCESSING_GROUP__', 'creategroup');
                progressIndicator = oae.api.util.progressIndicator(title, description);
            }
            progressIndicator.show();

            // Get the form values
            var values = $('#creategroup_group_form', $rootel).serializeObject();
            // Create the group
            oae.api.group.createGroup(values['creategroup_suggested_url'], values['creategroup_title'], values['creategroup_description'], values['creategroup_visibility'], values['creategroup_joinable'], [], [], function(err, group) {
                if (err) {
                    alert('An error has occured');
                }

                // Redirect to the group homepage
                document.location = '/group/' + group.id;
            });
        };
    
        /**
         * Set up all functionality around the automatic URL suggestion. The base URL is filled in, based on the browser's
         * address. For every change in the title field, a new URL will be suggested based on the entered url.
         */
        var setUpSuggestedURL = function() {
            // Set up the base URL
            $('#creategroup_suggested_url_base', $rootel).text(window.location.protocol + '//' + window.location.host + '/group/');

            // Update suggested URL every time the user changes the title or when the user 
            // has finished editing the URL directly. This will strip out spaces and
            // colons and replace them with dashes, as we don't allow them for the alias
            $rootel.on('keyup', '#creategroup_title', convertToValidURL);
            $rootel.on('blur', '#creategroup_suggested_url', convertToValidURL);
        };
        
        /**
         * Select the right default values for visibility and joinability, based on the configuration
         * options set in the admin UI
         */
        var setUpDefaultValues = function() {
            $('#creategroup_visibility', $rootel).val(oae.api.config.getValue('oae-principals', 'group', 'visibility'));
            $('#creategroup_joinable', $rootel).val(oae.api.config.getValue('oae-principals', 'group', 'joinable'));
        };
        
        /**
         * Convert a suggested URL into a valid URL. This is done by lower casing the URL and
         * replacing all spaces and colons by dashes
         */
        var convertToValidURL = function() {
            var suggestedURL = $(this).val().toLowerCase().replace(/[: ]/g, '-');
            $('#creategroup_suggested_url', $rootel).val(suggestedURL);
            //renderShareMessage();
        };
        
        setUpValidation();
        setUpSuggestedURL();
        setUpDefaultValues();

    }
});


/*

TODO: Remove all of this once members can be suggested

var renderShareMessage = function() {
    $(creategroupMembersMessage, $rootel).html(sakai.api.Util.TemplateRenderer(creategroupMembersMessageTemplate, {
        'creatorName' : sakai.api.User.getDisplayName(sakai.data.me.profile),
        'groupName' : sakai.api.Security.safeOutput($creategroupGroupTitle.val() || ''),
        'link': sakai.config.SakaiDomain + '/~' + sakai.api.Util.makeSafeURL($creategroupSuggestedURL.val() || '')
    }));
};

/**
 * Intialize the add people widget
 * @param {Boolean} openDialog Whether you want to open the dialog
 *
var initializeAddPeople = function(openDialog) {
    $(document).trigger('init.managegroupmembers.sakai', {
        editingGroup: false,
        openDialog: openDialog
    });
};

$(document).on('click', '.creategroup_add_people', initializeAddPeople);

$(window).on('toadd.addpeople.sakai', function(ev, initTuid, users) {
    selectedUsers = $.extend(true, [], users);
    $creategroupMembersAddedContainer.html(sakai.api.Util.TemplateRenderer(creategroupMembersSelectedTemplate, {
        'users': selectedUsers,
        'roles': currentTemplate.roles,
        'sakai': sakai
    }));

    if (selectedUsers.length) {
        renderShareMessage();
        $creategroupGroupMembersNoneAddedContainer.hide();
        $creategroupMembersAddedContainer.show();
    } else {
        $creategroupGroupMembersNoneAddedContainer.show();
        $creategroupMembersAddedContainer.hide();
    }
});

*/
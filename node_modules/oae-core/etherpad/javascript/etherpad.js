/*!
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

define(['jquery', 'oae.core'], function($, oae) {

    return function(uid, showSettings, contentObj) {

        /////////////////////////////
        // Configuration variables //
        /////////////////////////////

        var $rootel = $('#' + uid);  // unique container for each widget instance


        var displaySettings = function() {
            $.ajax({
                'url': '/api/content/' + contentObj.id + '/join',
                'type': 'POST',
                'success': function(data) {
                    $('#etherpad_settings_content', $rootel).html('<iframe src="' + data.url + '"  style="width:100%; border: 0px; min-height:500px" id="etherpad_editor" />');
                    $('#etherpad_settings', $rootel).show();
                }
            });
        };

        var displayMain = function(html) {
            $('#etherpad_main_content').html(contentObj.collabdoc.html || 'Share the URL of this document to collaborate with a colleague or friend.');
            $('#etherpad_main', $rootel).show();
            if (contentObj.isManager) {
                $('#etherpad_main_edit').show();
            }
        };

        var addBindings = function() {
            $('#etherpad_main_edit', $rootel).on('click', function() {
                $('#etherpad_main', $rootel).hide();
                displaySettings();
            });
            $('#etherpad_settings_controls_return', $rootel).on('click', function() {
                $('#etherpad_settings', $rootel).hide();
                doInit();
            });
            $('#etherpad_settings_controls_publish', $rootel).on('click', function() {
                publish(function(err) {
                    $('#etherpad_settings', $rootel).hide();
                    if (!err) {
                        showSettings = false;

                        // Remove the etherpad.
                        $('#etherpad_settings_content #etherpad_editor', $rootel).remove();

                        // Show the main content.
                        doInit();
                    } else {
                        oae.api.util.showNotification('Etherpad', 'Could not publish data', 'error');
                    }
                });
            });
        };

        //////////////////////
        // API INTERACTIONS //
        //////////////////////

        var publish = function(callback) {
            $.ajax({
                'url': '/api/content/' + contentObj.id + '/publish',
                'type': 'POST',
                'success': function(data) {
                    contentObj = data;
                    callback();
                },
                'error': function(jqXHR, textStatus) {
                    callback({'code': jqXHR.status, 'msg': jqXHR.statusText});
                }
            });
        };
        /////////////////////////////
        // Initialization function //
        /////////////////////////////

        /**
         * Initialization function that is run when the widget is loaded. Determines
         * which mode the widget is in (settings or main), loads the necessary data
         * and shows the correct view.
         */
        var doInit = function() {
            if (showSettings) {
                // Edit mode.
                displaySettings();
            } else {
                // Show the document.
                displayMain();
            }
        };

        addBindings();

        // run the initialization function when the widget object loads
        doInit();
    };
});

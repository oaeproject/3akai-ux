/*!
 * Copyright 2013 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

define(['jquery', 'oae.core'], function ($, oae) {

    return function (uid) {

        // The widget container
        var $rootel = $('#' + uid);

        // Variable that will keep track of the current page context.
        // This can be a content item or a discussion item.
        var contextProfile = null;

        /**
         * Can be called when the resource has been removed on the API.
         * It will show an appropriate notification and if no error occurred
         * will close the dialog and redirect to the me page.
         *
         * @param  {Object} err    An error object.
         */
        var resourceRemoved = function(err) {
            // Show a notification to the user.
            // We pass the error into the template so it can
            // display the appropriate message.
            var templateData = {
                'err': err,
                'contextProfile': contextProfile
            };
            oae.api.util.notification(
                oae.api.util.template().render($('#deleteresource-template-notifications-title', $rootel), templateData),
                oae.api.util.template().render($('#deleteresource-template-notifications-message', $rootel), templateData),
                (err) ? 'error' : null);

            // Re-enable the delete button again.
            $('#deleteresource-delete', $rootel).prop('disabled', false);

            // If the resource was removed succesfully, we can remove the modal
            // and redirect to the the me page.
            if (!err) {
                $('#deleteresource-modal', $rootel).modal('hide');
                setTimeout(oae.api.util.redirect().me, 2000);
            }
        };

        /**
         * Will perform the appropriate delete request and delete the resource from the system.
         */
        var removeResource = function() {
            if (contextProfile.resourceType === 'discussion') {
                oae.api.discussion.deleteDiscussion(contextProfile.id, resourceRemoved);
            } else if (contextProfile.resourceType === 'content') {
                oae.api.content.deleteContent(contextProfile.id, resourceRemoved);
            }
        };

        /**
         * Initializes the modal dialog
         */
        var setUpDeleteResourceModal = function() {
            $(document).on('click', '.oae-trigger-deleteresource', function() {
                // Request the resource profile information
                $(document).trigger('oae.context.get', 'deleteresource');

                // Show the modal.
                $('#deleteresource-modal', $rootel).modal();
            });

            /**
             * Gets executed when we receive the context information.
             *
             * @param  {Object}    ev         The `oae.context.send` event
             * @param  {Object}    context    The profile data for the resource. Either a discussion profile or a content profile.
             */
            $(document).on('oae.context.send.deleteresource', function(ev, context) {
                contextProfile = context;

                // Render the modal.
                oae.api.util.template().render($('#deleteresource-template', $rootel), {
                    'contextProfile': contextProfile
                }, $('#deleteresource-modal', $rootel));

                // Binds the 'confirm' button that removes the resource.
                $('#deleteresource-delete', $rootel).on('click', function() {
                    // Disable the button so the user can't click it twice.
                    $('#deleteresource-delete', $rootel).prop('disabled', 'disabled');

                    // Remove the resource.
                    removeResource();
                });
            });
        };

        setUpDeleteResourceModal();
    };
});

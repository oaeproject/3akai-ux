casper.test.begin('Widget - Delete resource', function(test) {

    /**
     * Open the delete resource modal with assertions
     */
    var verifyDeleteResourceModal = function() {
        casper.waitForSelector('#content-clip-container .oae-clip-content > button', function() {
            casper.click('#content-clip-container .oae-clip-content > button');
            casper.waitForSelector('button.oae-trigger-deleteresource', function() {
                test.assertExists('button.oae-trigger-deleteresource', 'The delete resource trigger is present');
                casper.click('button.oae-trigger-deleteresource');
                casper.waitUntilVisible('#deleteresource-modal', function() {
                    test.assertVisible('#deleteresource-modal', 'Delete resource pane is showing after trigger');
                    casper.click('#content-clip-container .oae-clip-content > button');
                });
            });
        });
    };

    /**
     * Open the delete resource modal without assertions
     *
     * @param  {String}    resourceType    The type of the resource
     */
    var openDeleteResourceModal = function(resourceType) {
        casper.waitForSelector('#' + resourceType + '-clip-container .oae-clip-content > button', function() {
            casper.click('#' + resourceType + '-clip-container .oae-clip-content > button');
            casper.waitForSelector('button.oae-trigger-deleteresource', function() {
                casper.click('button.oae-trigger-deleteresource');
                casper.waitUntilVisible('#deleteresource-modal', function() {
                    casper.click('#' + resourceType + '-clip-container .oae-clip-content > button');
                });
            });
        });
    };

    /**
     * Verify that the delete resource elements are present
     */
    var verifyDeleteResourceElements = function() {
        test.assertExists('#deleteresource-modal .modal-body h4', 'Verify that a warning header is shown');
        test.assertExists('#deleteresource-modal .modal-body .alert.alert-danger', 'Verify that a warning alert text is shown');
        test.assertExists('#deleteresource-modal .modal-footer button[data-dismiss="modal"]', 'Verify that the cancel button is shown');
        test.assertExists('#deleteresource-modal .modal-footer button#deleteresource-delete', 'Verify that the delete button is shown');
    };

    /**
     * Verify deleting a resource
     *
     * @param  {String}    resourceType    The type of the resource, used for the casperjs test output
     */
    var verifyDeletingResource = function(resourceType) {
        casper.waitForSelector('#deleteresource-modal .modal-footer button#deleteresource-delete', function() {
            casper.click('#deleteresource-modal .modal-footer button#deleteresource-delete');
            // Verify that deleting the item succeeded
            casper.waitForSelector('#oae-notification-container .alert', function() {
                test.assertDoesntExist('#oae-notification-container .alert.alert-error', 'The ' + resourceType + ' was successfully deleted');
                // Verify that the user gets redirected to the me page
                casper.waitForSelector('#me-clip-container', function() {
                    test.assertExists('#me-clip-container', 'User gets redirected to /me after the ' + resourceType + ' is deleted');
                });
            });
        });
    };

    casper.start(configUtil().tenantUI, function() {
        // Create a user to test with
        var user = null;
        userUtil().createUsers(1, function(users) {
            user = users[0];
        });

        // Login with that user
        casper.then(function() {
            userUtil().doLogIn(user.username, configUtil().defaultUserPassword);
        });

        var filePath = null;
        var linkPath = null;
        var discussionPath = null;
        var collabDocPath = null;
        // Create a file
        casper.then(function() {
            contentUtil().createFile(null, function(_filePath) {
                filePath = _filePath;

                // Create a link
                casper.then(function() {
                    contentUtil().createLink(null, null, null, function(link) {
                        linkPath = link.profilePath;

                        // Create a discussion
                        casper.then(function() {
                            discussionUtil().createDiscussion(function(_discussionData) {
                                discussionPath = _discussionData.profilePath;

                                // Create a collaborative document
                                casper.then(function() {
                                    collabDocUtil().createCollabDoc(function(_collabdocData) {
                                        collabDocPath = _collabdocData.profilePath;

                                        // Verify that the delete resource modal opens
                                        casper.thenOpen(configUtil().tenantUI + filePath, function() {
                                            casper.echo('Verify open delete resource modal', 'INFO');
                                            verifyDeleteResourceModal();
                                        });

                                        // Verify that the delete resource elements are present
                                        casper.then(function() {
                                            casper.echo('Verify delete resource elements', 'INFO');
                                            verifyDeleteResourceElements();
                                        });

                                        // Verify deleting a content item
                                        casper.thenOpen(configUtil().tenantUI + filePath, function() {
                                            casper.echo('Verify deleting a content item', 'INFO');
                                            openDeleteResourceModal('content');
                                            verifyDeletingResource('content');
                                        });

                                        // Verify deleting a link
                                        casper.thenOpen(configUtil().tenantUI + linkPath, function() {
                                            casper.echo('Verify deleting a link', 'INFO');
                                            openDeleteResourceModal('content');
                                            verifyDeletingResource('link');
                                        });

                                        // Verify deleting a discussion
                                        casper.thenOpen(configUtil().tenantUI + discussionPath, function() {
                                            casper.echo('Verify deleting a discussion', 'INFO');
                                            openDeleteResourceModal('discussion');
                                            verifyDeletingResource('discussion');
                                        });

                                        // Verify deleting a collaborative document
                                        casper.thenOpen(configUtil().tenantUI + collabDocPath, function() {
                                            casper.echo('Verify deleting a collaborative document', 'INFO');
                                            openDeleteResourceModal('content');
                                            verifyDeletingResource('collaborative document');
                                        });

                                        // Log out at the end of the test
                                        casper.then(function() {
                                            userUtil().doLogOut();
                                        });
                                    });
                                });
                            });
                        });
                    });
                });
            });
        });
    });

    casper.run(function() {
        test.done();
    });
});

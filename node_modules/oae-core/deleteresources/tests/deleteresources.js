casper.test.begin('Widget - Delete resources', function(test) {

    /**
     * Open the delete resources modal with assertions
     */
    var verifyDeleteResourcesModal = function() {
        casper.waitForSelector('li.oae-list-actions + li .oae-list-grid-item input[type="checkbox"]', function() {
            casper.click('li.oae-list-actions + li .oae-list-grid-item input[type="checkbox"]');
            test.assertExists('#contentlibrary-widget .oae-list-header-actions button.oae-trigger-deleteresources:not([disabled])', 'The delete resources button is enabled');
            casper.click('#contentlibrary-widget .oae-list-header-actions button.oae-trigger-deleteresources');
            casper.waitUntilVisible('#deleteresources-modal', function() {
                test.assertVisible('#deleteresources-modal', 'The delete resources pane is showing after trigger');
                casper.click('li.oae-list-actions + li .oae-list-grid-item input[type="checkbox"]');
            });
        });
    };

    /**
     * Open the delete resources modal without assertions
     */
    var openDeleteResourcesModal = function() {
        casper.waitForSelector('li.oae-list-actions + li .oae-list-grid-item input[type="checkbox"]', function() {
            casper.click('li.oae-list-actions + li .oae-list-grid-item input[type="checkbox"]');
            casper.click('#contentlibrary-widget .oae-list-header-actions button.oae-trigger-deleteresources');
            casper.waitUntilVisible('#deleteresources-modal', function() {
                casper.click('li.oae-list-actions + li .oae-list-grid-item input[type="checkbox"]');
            });
        });
    };

    /**
     * Verify that the delete resources elements are present
     */
    var verifyDeleteResourcesElements = function() {
        test.assertExists('#deleteresources-modal .modal-body h4', 'Verify that a warning header is shown');
        test.assertExists('#deleteresources-modal .modal-body ul.oae-list li', 'Verify that a list of resources to delete is shown');
        test.assertExists('#deleteresources-modal .modal-body #deleteresources-manage-delete-library', 'Verify that the button to remove resources from the library only is showing');
        test.assertExists('#deleteresources-modal .modal-body #deleteresources-manage-delete-system', 'Verify that the button to remove resources from the system is showing');
    };

    /**
     * Verify that deleting resources from the library with another manager on the content succeeds.
     */
    var verifyDeleteResourcesFromLibrary = function() {
        casper.waitForSelector('#deleteresources-modal .modal-body #deleteresources-manage-delete-library', function() {
            casper.click('#deleteresources-modal .modal-body #deleteresources-manage-delete-library');
            // Verify that deleting the item succeeded
            casper.waitForSelector('#oae-notification-container .alert', function() {
                test.assertDoesntExist('#oae-notification-container .alert.alert-error', 'Verify that deleting resources from the library with another manager on the content succeeds');
                casper.click('#oae-notification-container .close');
            });
        });
    };

    /**
     * Verify that deleting resources from the library as the only manager does not succeed.
     */
    var verifyDeleteResourcesFromLibraryAsOnlyManager = function() {
        casper.waitForSelector('#deleteresources-modal .modal-body #deleteresources-manage-delete-library', function() {
            casper.click('#deleteresources-modal .modal-body #deleteresources-manage-delete-library');
            // Verify that deleting the item succeeded
            casper.waitForSelector('#oae-notification-container .alert', function() {
                test.assertExists('#oae-notification-container .alert.alert-error', 'Verify that a content item with only one manager cannot be removed from the library');
                casper.click('#oae-notification-container .close');
            });
        });
    };

    /**
     * Verify that resources can be deleted from the system
     */
    var verifyDeleteResourcesFromSystem = function() {
        casper.waitForSelector('#deleteresources-modal .modal-body #deleteresources-manage-delete-library', function() {
            casper.click('#deleteresources-modal .modal-body #deleteresources-manage-delete-system');
            // Verify that deleting the item succeeded
            casper.waitForSelector('#oae-notification-container .alert', function() {
                test.assertDoesntExist('#oae-notification-container .alert.alert-error', 'Verify that deleting resources from the system succeeds.');
                casper.click('#oae-notification-container .close');
            });
        });
    };

    casper.start(configUtil().tenantUI, function() {
        // Create a user to test with
        var user1 = null;
        var user2 = null;
        userUtil().createUsers(2, function(users) {
            user1 = users[0];
            user2 = users[1];
        });

        // Login with that user
        casper.then(function() {
            userUtil().doLogIn(user1.username, configUtil().defaultUserPassword);
        });

        casper.then(function() {
            contentUtil().createLink(null, [user2.id], null, function() {

                casper.thenOpen(configUtil().tenantUI + '/me/library', function() {
                    // Verify that the delete resources modal opens
                    casper.then(function() {
                        casper.echo('Verify open delete resources modal', 'INFO');
                        verifyDeleteResourcesModal();
                    });

                    // Verify that the delete resources elements are present
                    casper.then(function() {
                        casper.echo('Verify delete resources elements', 'INFO');
                        verifyDeleteResourcesElements();
                    });

                    // Verify that content with another manager can be deleted from my library
                    casper.then(function() {
                        casper.echo('Verify deleting resources from the library succeeds for content with another manager', 'INFO');
                        verifyDeleteResourcesFromLibrary();
                    });

                    casper.then(function() {
                        contentUtil().createLink(null, null, null, function() {
                            casper.reload(function() {
                                // Verify that as the only manager I cannot remove content from my library
                                casper.then(function() {
                                    casper.echo('Verify deleting resources from the library fails for content with only me as a manager', 'INFO');
                                    openDeleteResourcesModal();
                                    verifyDeleteResourcesFromLibraryAsOnlyManager();
                                });

                                contentUtil().createLink(null, null, null, function() {
                                    casper.reload(function() {
                                        // Verify deleting content from the system
                                        casper.then(function() {
                                            casper.echo('Verify deleting resources from the system', 'INFO');
                                            openDeleteResourcesModal();
                                            verifyDeleteResourcesFromSystem();
                                        });
                                    });
                                });
                            });
                        });
                    });
                });
            });
        });

        // Log out at the end of the test
        casper.then(function() {
            userUtil().doLogOut();
        });
    });

    casper.run(function() {
        test.done();
    });
});

/*!
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

define(['jquery', 'oae.core', 'jquery.fileupload', 'jquery.iframe-transport'], function($, oae) {

    return function(uid, showSettings) {

        // The widget container
        var $rootel = $('#' + uid);

        // Keeps track of the selected file to send to the upload API
        var selectedFile = null;

        // IE9 and below don't support XHR file uploads and we fall back to iframe transport
        var useIframeTransport = !$.support.xhrFileUpload && !$.support.xhrFormDataFileUpload;

        /**
         * Resets the upload new version widget
         */
        var reset = function() {
            // Reset the upload form
            $('#uploadnewversion-form', $rootel)[0].reset();

            // Show the file input field
            $('#uploadnewversion-form-input', $rootel).show();

            // If we need an iframe for the upload, progress will probably not be supported.
            if (!useIframeTransport) {
                // Reset the progress bar
                $('.progress', $rootel).hide();
                updateProgress(0);
            }
        };

        /**
         * Updates the progress indicator
         *
         * @param  {Number}   progress   Number between 0 and 100 indicating the upload progress
         */
        var updateProgress = function(progress) {
            $('.bar', $rootel).css('width', progress + '%');
        };

        /**
         * Checks if the user selected/dropped an acceptable file.
         *
         * @param  {Object}   ev     The event sent out by jquery fileupload change or drop
         * @param  {Object}   data   The data coming from the jquery fileupload drop or change event
         */
        var checkValidFile = function(ev, data) {
            var valid = false;
            var file = data.files[0];

            if (useIframeTransport) {
                if (file.name) {
                    valid = true;
                }
            } else {
                if (file.size > 0 && file.name) {
                    valid = true;
                }
            }

            if (valid) {
                selectedFile = file;
                $('#uploadnewversion-upload', $rootel).prop('disabled', false);
            }
        };

        /**
         * Sets up the single file upload field for uploading a new version.
         *
         * @param  {Object}    ev         The `oae.context.send` event
         * @param  {Object}    context    The content profile data
         */
        var setUpNewVersionInput = function(ev, context) {
            var fileuploadOptions = {
                'url': '/api/content/' + context.id + '/newversion',
                'replaceFileInput': false,
                'forceIframeTransport': useIframeTransport,
                'add': function() {/* Overriding `add` to avoid submitting the file on selection */},
                'drop': checkValidFile,
                'change': checkValidFile,
                'progress': function(ev, data) {
                    // If we need an iframe for the upload, progress will probably not be supported.
                    if (!useIframeTransport) {
                        // Update the progress bar
                        updateProgress((data.loaded / data.total) * 100);
                    }
                }
            };

            $('#uploadnewversion-form-input', $rootel).fileupload(fileuploadOptions);
        };

        /**
         * Uploads the new version and closes the dialog when complete.
         */
        var uploadNewVersion = function() {
            // Disable the upload button
            $('#uploadnewversion-upload', $rootel).prop('disabled', true);

            // Hide the file input field
            $('#uploadnewversion-form-input', $rootel).hide();

            // If we need an iframe for the upload, progress will probably not be supported.
            if (!useIframeTransport) {
                // Show the progress bar
                $('.progress', $rootel).show();
            } else {
                // Show the spinner
                $('.icon-spinner' , $rootel).show();
            }

            // Lock the modal so it cannot be closed during upload
            $('#uploadnewversion-modal', $rootel).modal('lock');

            // Upload the new version and hide the dialog on completion
            oae.api.content.uploadNewVersion($('#uploadnewversion-form-input', $rootel), selectedFile, function(error, updatedContent) {
                $(document).trigger('oae.uploadnewversion.complete', updatedContent);
                // If we need an iframe for the upload, progress will probably not be supported.
                if (!useIframeTransport) {
                    updateProgress(100);
                }
                // Unlock the modal
                $('#uploadnewversion-modal', $rootel).modal('unlock');
                // Hide the modal
                $('#uploadnewversion-modal', $rootel).modal('hide');
                // Show a notification when the upload is complete
                oae.api.util.notification(
                    oae.api.i18n.translate('__MSG__VERSION_UPLOADED__', 'uploadnewversion'),
                    oae.api.i18n.translate('__MSG__VERSION_SUCCESSFULLY_UPLOADED__', 'uploadnewversion')
                );
            });
            return false;
        };

        /**
         * Initializes the upload new version modal dialog
         */
        var initUploadNewVersionModal = function() {
            $(document).on('click', '.oae-trigger-uploadnewversion', function() {
                // Show the modal
                $('#uploadnewversion-modal', $rootel).modal();

                // Request the content profile information
                $(document).trigger('oae.context.get', 'uploadnewversion');
            });

            // Receive the content profile information and set up the fileupload plugin
            $(document).on('oae.context.send.uploadnewversion', setUpNewVersionInput);

            // Hide the spinning icon with jQuery (https://github.com/FortAwesome/Font-Awesome/issues/729)
            $('.icon-spinner' , $rootel).hide();

            // Set focus to the browse button when the modal is fully visible
            $('#uploadnewversion-modal', $rootel).on('shown', function () {
                $('#uploadnewversion-form-input').focus();
            });

            // Reset the widget when it's fully hidden
            $('#uploadnewversion-modal', $rootel).on('hidden', reset);

            // Start the upload of the new version
            $('#uploadnewversion-form', $rootel).submit(uploadNewVersion);
        };

        initUploadNewVersionModal();

    };
});

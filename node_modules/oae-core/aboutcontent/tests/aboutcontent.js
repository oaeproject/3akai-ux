/*!
 * Copyright 2014 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

casper.test.begin('Widget - About Content', function(test) {

    /**
     * Open the about content modal with assertions
     */
    var verifyOpenAboutContent = function() {
        casper.waitForSelector('#content-clip-container .oae-clip-content > button', function() {
            casper.click('#content-clip-container .oae-clip-content > button');
            test.assertExists('.oae-trigger-aboutcontent', 'About content trigger exists');
            casper.click('.oae-trigger-aboutcontent');
            casper.waitUntilVisible('#aboutcontent-modal', function() {
                test.assertVisible('#aboutcontent-modal', 'About content pane is showing after trigger');
                casper.click('#content-clip-container .oae-clip-content > button');
            });
        });
    };

    /**
     * Open the about content modal without assertions
     */
    var openAboutContent = function() {
        casper.waitForSelector('#content-clip-container .oae-clip-content > button', function() {
            casper.click('#content-clip-container .oae-clip-content > button');
            casper.click('.oae-trigger-aboutcontent');
            casper.waitUntilVisible('#aboutcontent-modal', function() {
                casper.click('#content-clip-container .oae-clip-content > button');
            });
        });
    };

    /**
     * Verify that all elements for files are present in the about content modal
     *
     * @param {User}    user1    The user profile of the user that created the content item
     */
    var verifyAboutFileElements = function(user1) {
        test.assertExists('#aboutcontent-modal .modal-header h3', 'Verify that the modal has a header');
        test.assertSelectorHasText('#aboutcontent-modal .modal-header h3', 'About', 'Verify that the modal header reads \'About\'');
        test.assertExists('#aboutcontent-modal .modal-body ul.oae-list li', 'Verify that the modal shows who added the file');
        test.assertExists('#aboutcontent-modal .modal-body ul.oae-list li .oae-listitem-primary-thumbnail', 'Verify that the modal shows the picture of the user who added the file');
        test.assertExists('#aboutcontent-modal .modal-body ul.oae-list li .oae-listitem-metadata h3', 'Verify that the modal shows the name of the user who added the file');
        test.assertSelectorHasText('#aboutcontent-modal .modal-body ul.oae-list li .oae-listitem-metadata h3', user1.displayName, 'Verify that the correct name is shown');
        test.assertExists('#aboutcontent-modal .modal-body ul.oae-list li .oae-listitem-metadata small', 'Verify that the modal shows the tenant of the user who added the file');
        test.assertSelectorHasText('#aboutcontent-modal .modal-body ul.oae-list li .oae-listitem-metadata small', 'CasperJS Tenant', 'Verify that the metadata shows the tenant name');
        test.assertExists('#aboutcontent-modal .modal-body #aboutcontent-metadata-container #aboutcontent-title', 'Verify that the modal shows title of the file');
        test.assertSelectorHasText('#aboutcontent-modal .modal-body #aboutcontent-metadata-container #aboutcontent-title', 'balloons.jpg', 'Verify that the correct file title is shown');
        test.assertExists('#aboutcontent-modal .modal-body #aboutcontent-metadata-container time', 'Verify that the modal shows when the file was added');
        // TODO Verify that the date shown corresponds to the created date after the createFile API returns the content profile and we have the date
        test.assertExists('#aboutcontent-modal .modal-body #aboutcontent-metadata-container #aboutcontent-description', 'Verify that the modal shows the description of the file');
        test.assertSelectorHasText('#aboutcontent-modal .modal-body #aboutcontent-metadata-container #aboutcontent-description', 'Test file description', 'Verify that the correct file description is shown');
    };

    /**
     * Verify that all elements for links are present in the about content modal
     *
     * @param {User}    user1    The user profile of the user that created the content item
     */
    var verifyAboutLinkElements = function(user1, link) {
        test.assertExists('#aboutcontent-modal .modal-header h3', 'Verify that the modal has a header');
        test.assertSelectorHasText('#aboutcontent-modal .modal-header h3', 'About', 'Verify that the modal header reads \'About\'');
        test.assertExists('#aboutcontent-modal .modal-body ul.oae-list li', 'Verify that the modal shows who added the link');
        test.assertExists('#aboutcontent-modal .modal-body ul.oae-list li .oae-listitem-primary-thumbnail', 'Verify that the modal shows the picture of the user who added the link');
        test.assertExists('#aboutcontent-modal .modal-body ul.oae-list li .oae-listitem-metadata h3', 'Verify that the modal shows the name of the user who added the link');
        test.assertSelectorHasText('#aboutcontent-modal .modal-body ul.oae-list li .oae-listitem-metadata h3', user1.displayName, 'Verify that the correct name is shown');
        test.assertExists('#aboutcontent-modal .modal-body ul.oae-list li .oae-listitem-metadata small', 'Verify that the modal shows the tenant of the user who added the link');
        test.assertSelectorHasText('#aboutcontent-modal .modal-body ul.oae-list li .oae-listitem-metadata small', 'CasperJS Tenant', 'Verify that the metadata shows the tenant name');
        test.assertExists('#aboutcontent-modal .modal-body #aboutcontent-metadata-container #aboutcontent-title', 'Verify that the modal shows title of the link');
        test.assertSelectorHasText('#aboutcontent-modal .modal-body #aboutcontent-metadata-container #aboutcontent-title', 'Test link title', 'Verify that the correct link title is shown');
        test.assertExists('#aboutcontent-modal .modal-body #aboutcontent-metadata-container time', 'Verify that the modal shows when the file was added');
        test.assertEval(function(created) {
            return $('#aboutcontent-modal .modal-body #aboutcontent-metadata-container time').text() === require('oae.api.l10n').transformDate(created);
        }, 'Verify that the correct time when the link was created is shown', link.created);
        test.assertExists('#aboutcontent-modal .modal-body #aboutcontent-metadata-container #aboutcontent-description', 'Verify that the modal shows the description of the link');
        test.assertSelectorHasText('#aboutcontent-modal .modal-body #aboutcontent-metadata-container #aboutcontent-description', 'Test link description', 'Verify that the correct link description is shown');
        test.assertExists('#aboutcontent-modal .modal-body #aboutcontent-metadata-container #aboutcontent-link a', 'Verify that the modal shows link URL');
        test.assertSelectorHasText('#aboutcontent-modal .modal-body #aboutcontent-metadata-container #aboutcontent-link a', 'http://www.oaeproject.org', 'Verify that the link title is the URL of the link');
        test.assertExists('#aboutcontent-modal .modal-body #aboutcontent-metadata-container #aboutcontent-link a[href="http://www.oaeproject.org"][target="_blank"]', 'Verify that the link points to the correct URL and opens in a new window');
    };

    /**
     * Verify that all elements for collaborative documents are present in the about content modal
     *
     * @param {User}    user1    The user profile of the user that created the content item
     */
    var verifyAboutCollabdocElements = function(user1, collabdoc) {
        test.assertExists('#aboutcontent-modal .modal-header h3', 'Verify that the modal has a header');
        test.assertSelectorHasText('#aboutcontent-modal .modal-header h3', 'About', 'Verify that the modal header reads \'About\'');
        test.assertExists('#aboutcontent-modal .modal-body ul.oae-list li', 'Verify that the modal shows who added the collaborative document');
        test.assertExists('#aboutcontent-modal .modal-body ul.oae-list li .oae-listitem-primary-thumbnail', 'Verify that the modal shows the picture of the user who added the collaborative document');
        test.assertExists('#aboutcontent-modal .modal-body ul.oae-list li .oae-listitem-metadata h3', 'Verify that the modal shows the name of the user who added the collaborative document');
        test.assertSelectorHasText('#aboutcontent-modal .modal-body ul.oae-list li .oae-listitem-metadata h3', user1.displayName, 'Verify that the correct name is shown');
        test.assertExists('#aboutcontent-modal .modal-body ul.oae-list li .oae-listitem-metadata small', 'Verify that the modal shows the tenant of the user who added the collaborative document');
        test.assertSelectorHasText('#aboutcontent-modal .modal-body ul.oae-list li .oae-listitem-metadata small', 'CasperJS Tenant', 'Verify that the metadata shows the tenant name');
        test.assertExists('#aboutcontent-modal .modal-body #aboutcontent-metadata-container #aboutcontent-title', 'Verify that the modal shows title of the collaborative document');
        test.assertSelectorHasText('#aboutcontent-modal .modal-body #aboutcontent-metadata-container #aboutcontent-title', 'Test collabdoc title', 'Verify that the correct collaborative document title is shown');
        test.assertExists('#aboutcontent-modal .modal-body #aboutcontent-metadata-container time', 'Verify that the modal shows when the file was added');
        test.assertEval(function(created) {
            return $('#aboutcontent-modal .modal-body #aboutcontent-metadata-container time').text() === require('oae.api.l10n').transformDate(created);
        }, 'Verify that the correct time when the collaborative document was created is shown', collabdoc.created);
        test.assertExists('#aboutcontent-modal .modal-body #aboutcontent-metadata-container #aboutcontent-description', 'Verify that the modal shows the description of the collaborative document');
        test.assertSelectorHasText('#aboutcontent-modal .modal-body #aboutcontent-metadata-container #aboutcontent-description', 'Test collabdoc description', 'Verify that the correct collaborative document description is shown');
    };

    casper.start(configUtil().tenantUI, function() {
        // Create a couple of users to test with
        var user1 = null;
        var user2 = null;
        userUtil().createUsers(2, function(users) {
            user1 = users[0];
            user2 = users[1];
        });

        // Login with the first user
        casper.then(function() {
            userUtil().doLogIn(user1.username, user1.password);
        });

        casper.then(function() {
            // Create a file
            contentUtil().createFile(null, null, [user2.id], function(contentProfile) {
                contentUtil().updateContent(contentProfile.id, {'description': 'Test file description'}, function() {

                    // Create a link
                    contentUtil().createLink('http://www.oaeproject.org', null, [user2.id], function(linkProfile) {
                        contentUtil().updateContent(linkProfile.id, {'description': 'Test link description', 'displayName': 'Test link title'}, function() {

                            // Create a collaborative document
                            collabDocUtil().createCollabDoc(null, [user2.id], function(collabdocProfile) {
                                contentUtil().updateContent(collabdocProfile.id, {'description': 'Test collabdoc description', 'displayName': 'Test collabdoc title'}, function() {
                                    // Log out from user 1
                                    casper.then(userUtil().doLogOut);

                                    // Log in with user 2 to start the tests
                                    casper.then(function() {
                                        userUtil().doLogIn(user2.username, user2.password);
                                    });

                                    casper.thenOpen(configUtil().tenantUI + contentProfile.profilePath, function() {
                                        casper.echo('Verify open about content modal', 'INFO');
                                        casper.waitForSelector('#content-clip-container .oae-clip-content > button', function() {
                                            verifyOpenAboutContent();
                                        });
                                    });

                                    casper.then(function() {
                                        casper.echo('Verify about content elements for files', 'INFO');
                                        verifyAboutFileElements(user1);
                                    });

                                    casper.thenOpen(configUtil().tenantUI + linkProfile.profilePath, function() {
                                        casper.echo('Verify about content elements for links', 'INFO');
                                        casper.waitForSelector('#content-clip-container .oae-clip-content > button', function() {
                                            casper.then(openAboutContent);
                                            casper.then(function() {
                                                verifyAboutLinkElements(user1, linkProfile);
                                            });
                                        });
                                    });

                                    casper.thenOpen(configUtil().tenantUI + collabdocProfile.profilePath, function() {
                                        casper.echo('Verify about content elements for collaborative documents', 'INFO');
                                        casper.waitForSelector('#content-clip-container .oae-clip-content > button', function() {
                                            casper.then(openAboutContent);
                                            casper.then(function() {
                                                verifyAboutCollabdocElements(user1, collabdocProfile);
                                            });
                                        });
                                    });

                                    casper.then(userUtil().doLogOut);
                                });
                            });
                        });
                    });
                });
            });
        });

    });

    casper.run(function() {
        test.done();
    });
});

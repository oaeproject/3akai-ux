/*!
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

define(['jquery', 'oae.core'], function($, oae) {

    return function(uid, showSettings) {

        var $rootel = $('#' + uid);

        /**
         * Adds the specified widget to the page
         * TODO: Create better way of constructing widgetData to pass to widget
         * TODO: Better management of widget containers
         *
         * @param  {Object}   data   The data for the widget to load
         */
        var initWidget = function(hash, widgets) {
            $('#' + hash).empty();
            // Insert the new widget
            oae.api.widget.insertWidget(widgets, null, $('#' + hash), null, {
                'principalId': oae.data.me.id,
                'canManage': false
            }, null);
        };

        /**
         * Determines which page to load based on the event that's passed in and passes the data on to `initWidget`
         *
         * @param  {Object}   ev   Event retrieved after an item in the left hand navigation is clicked
         */
        var loadPage = function(ev) {
            var widgetsToLoad = $(ev.target).parent().attr('data-widgets');
            initWidget($(ev.target).parent().attr('data-l'), widgetsToLoad);
        };

        /**
         * Adds binding to various elements in the widget
         */
        var addBinding = function() {
            $rootel.on('click', '#lhnavigation-container ul li a',function (ev) {
                $.bbq.pushState({'l': $(this).parent().attr('data-l')});
                $(this).tab('show');
                loadPage(ev);
            })
        };

        /**
         * Initializes the widget and selects the page that is defined in the hash or default first page
         */
        var doInit = function() {
            // Add binding to the navigation
            addBinding();

            var hash = 'dashboard';
            if ($.bbq.getState('l')) {
                hash = $.bbq.getState('l');
            }

            // Render the navigation
            oae.api.util.renderTemplate('#lhnavigation-firstcolumn-template', {'l': hash}, $('#lhnavigation-container'));

            // Initialize the selected page
            var widgetsToLoad = $('#lhnavigation-container ul li[data-l="' + hash + '"]', $rootel).attr('data-widgets');
            initWidget(hash, widgetsToLoad);
        };

        doInit();
    };
});

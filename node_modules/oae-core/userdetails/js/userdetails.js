/*!
 * Copyright 2015 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

define(['jquery', 'oae.core'], function($, oae) {

    return function(uid) {

        // The widget container
        var $rootel = $('#' + uid);

        /**
         * Disable any input fields or buttons in the user details form
         */
        var disableUserDetailsForm = function() {
            $('#userdetails-form input, #userdetails-form button', $rootel).prop('disabled', true);
        };

        /**
         * Enable any input fields or buttons in the user details form
         */
        var enableUserDetailsForm = function() {
            $('#userdetails-form input, #userdetails-form button', $rootel).prop('disabled', false);
        };

        /**
         * Accept the Terms and Conditions if required. If the request fails,
         * the form will be re-enabled and an appropriate notification will be shown
         *
         * @param  {Function}   callback    Standard callback function
         */
        var acceptTC = function(callback) {
            if (!oae.data.me.needsToAcceptTC) {
                return callback();
            }

            // Accept the terms and conditions
            oae.api.user.acceptTC(function(err) {
                if (err) {
                    oae.api.util.notification(
                        oae.api.i18n.translate('__MSG__TERMS_AND_CONDITIONS_NOT_ACCEPTED__', 'userdetails'),
                        oae.api.i18n.translate('__MSG__TERMS_AND_CONDITIONS_COULD_NOT_BE_ACCEPTED__', 'userdetails'),
                        'error');

                    return enableUserDetailsForm();
                }

                return callback();
            });
        };

        /**
         * Edit the profile
         */
        var editUserDetails = function() {
            disableUserDetailsForm();

            acceptTC(function() {
                // Update the name and/or email
                var params = {
                    'displayName': $.trim($('#userdetails-name', $rootel).val()),
                    'email': $.trim($('#userdetails-email', $rootel).val())
                };
                oae.api.user.updateUser(params, function (err, data) {
                    // If the update failed, enable the form and show an error notification
                    if (err) {
                        oae.api.util.notification(
                            oae.api.i18n.translate('__MSG__PROFILE_NOT_EDITED__'),
                            oae.api.i18n.translate('__MSG__PROFILE_DETAILS_EDIT_FAIL__', 'userdetails'),
                            'error');

                        return enableUserDetailsForm();
                    }

                    // If the update succeeded, trigger an event,
                    // show a success notification and close the modal
                    $('#userdetails-modal', $rootel).modal('unlock');
                    $('#userdetails-modal', $rootel).modal('hide');
                    oae.api.util.notification(
                        oae.api.i18n.translate('__MSG__PROFILE_EDITED__'),
                        oae.api.i18n.translate('__MSG__PROFILE_DETAILS_EDIT_SUCCESS__', 'userdetails'));

                    // Trigger an event so other elements can be updated
                    $(document).trigger('oae.editprofile.done', data);
                });
            });

            // Avoid default form submit behaviour
            return false;
        };

        /**
         * Hide the user details form and show the Terms and Conditions
         */
        var showTermsAndConditions = function() {
            $('#userdetails-modal').addClass('termsandconditions');
        };

        /**
         * Show the user details form and hide the Terms and Conditions
         */
        var showUserDetailsForm = function() {
            $('#userdetails-modal').removeClass('termsandconditions');
        };

        /**
         * Add the bindings to show or hide the Terms and Conditions
         */
        var addTermsAndConditionsBinding = function() {
            // Bind the Terms and Conditions link
            $rootel.on('click', '#register-terms-and-conditions', function() {
                // Get the Terms and Conditions and render them if we hadn't done so already
                if ($('#userdetails-terms-and-conditions-container', $rootel).is(':empty')) {
                    oae.api.user.getTC(function(err, data) {
                        oae.api.util.template().render($('#userdetails-terms-and-conditions-container-template', $rootel), {
                            'terms': data.text
                        }, $('#userdetails-terms-and-conditions-container', $rootel));
                    });
                }

                // Hide the user details form and show the Terms and Conditions
                showTermsAndConditions();
            });

            // Bind the `back` button
            $rootel.on('click', '#userdetails-back', function() {
                // Show the user details form and hide the Terms and Conditions
                showUserDetailsForm();

                // As the Terms and Conditions have now been seen by the user,
                // we check the Terms and Conditions checkbox
                $('#userdetails-accept-terms-and-conditions', $rootel).prop('checked', true);
            });
        };

        /**
         * Initialize the user details widget
         */
        var setupUserDetails = function() {
            addTermsAndConditionsBinding();

            // Fill in the displayName input field. If the displayName contains `http://` the user
            // logged in through Shibboleth but the IdP declined to release the actual name. In that
            // case we leave the input field blank and ask the user to fill it in
            if (oae.data.me.displayName.indexOf('http://') === -1) {
                $('#userdetails-name', $rootel).val(oae.data.me.displayName);
            }

            // Fill in the email input field
            $('#userdetails-email', $rootel).val(oae.data.me.email);

            // If the user doesn't have to accept the Terms and Conditions we hide them
            if (!oae.data.me.needsToAcceptTC) {
                $('#userdetails-form-accept-terms-and-conditions-container', $rootel).hide();
            }

            // Set up validation
            var validateOpts = {
                'submitHandler': editUserDetails
            };
            oae.api.util.validation().validate($('#userdetails-form', $rootel), validateOpts);

            // Show the modal but lock it, so it can't be clicked away
            $('#userdetails-modal', $rootel).modal();
            $('#userdetails-modal', $rootel).modal('lock');
        };

        setupUserDetails();
    };
});

/*!
 * Copyright 2014 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

define(['jquery', 'oae.core'], function ($, oae) {

    return function (uid) {

        // The widget container
        var $rootel = $('#' + uid);

        // Variable that will keep track of the current page context
        var contextProfile = null;

        // Variable that will keep track of the items to add to a folder
        var selectedItems = [];

        // Variable that will be used to keep track of the infinite scroll instances
        var myFoldersInfinityScroll = false;
        //var groupsInfinityScroll = false;

        /**
         * TODO
         */
        var setUpMyFolders = function() {
            // Make the
            $('#addtofolder-tab-mylibrary a', $rootel).click();

            // Disable the previous infinite scroll
            if (myFoldersInfinityScroll) {
                myFoldersInfinityScroll.kill();
            }

            var url = '/api/folder/library/' + oae.data.me.id;

            // Set up the infinite scroll instance
            myFoldersInfinityScroll = $('#addtofolder-mylibrary', $rootel).infiniteScroll(url, {
                'limit': 12
            }, '#addtofolder-folders-template', {
                'scrollContainer': $('#addtofolder-mylibrary-container', $rootel),
                'postProcessor': function(data) {
                    data.displayOptions = {
                        'addLink': false
                    };
                    return data;
                }
                //'emptyListProcessor': function() {
                //    oae.api.util.template().render($('#memberships-noresults-template', $rootel), {
                //        'query': query
                //    }, $('.oae-list', $rootel));
                //}
            });
        };

        /**
         * TODO
         */
        //var setUpFolders = function(principalId) {
        //
        //};

        /**
         * TODO
         */
        var setUpAddToFolder = function() {
            $('#addtofolder-form', $rootel).on('submit', function() {
                var selectedFolder = $('.tab-pane:visible input[type=radio]:checked').attr('value');
                oae.api.folder.addToFolder(selectedFolder, _.pluck(selectedItems, 'id'), function(err) {
                    console.log('Done');
                });
                return false;
            });
        };

        /**
         * TODO
         */
        var setUpSelectFolder = function() {
            $('#addtofolder-form', $rootel).on('change', function() {
                // TODO
                $('.tab-pane:visible .oae-pill').removeClass('oae-pill-active');
                // TODO
                $('.tab-pane:visible input[type=radio]:checked').parent().addClass('oae-pill-active');
                $('.tab-pane:visible input[type=radio]:checked').focus();
                // TODO
                $('#addtofolder-add', $rootel).prop('disabled', false);
            });
        };

        /**
         * Initialize the add to folder modal dialog
         */
        var setUpAddToFolderModal = function() {
            $(document).on('click', '.oae-trigger-addtofolder', function() {
                $('#addtofolder-modal', $rootel).modal({
                    'backdrop': 'static'
                });

                // Get the page context
                $(document).trigger('oae.context.get', 'addtofolder');
            });

            // Listen to the event that returns the current page context
            $(document).on('oae.context.send.addtofolder', function(ev, context) {
                contextProfile = context;
                // Get the list selection
                $(document).trigger('oae.list.getSelection', 'addtofolder');
            });

            // Listen to the event that returns the list of selected content items
            $(document).on('oae.list.sendSelection.addtofolder', function(ev, selected) {
                selectedItems = selected.results;
                // When the current context is a group that is managed by the current user, the
                // folders in the group library are listed by default. Otherwise, the folders in
                // the user's library will always be listed by default.
                if (contextProfile.resourceType === 'group' && contextProfile.isManager) {
                    setUpGroupFolders(contextProfile);
                } else {
                    setUpMyFolders();
                }
            });
        };

        setUpAddToFolder();
        setUpSelectFolder();
        setUpAddToFolderModal();

    };
});

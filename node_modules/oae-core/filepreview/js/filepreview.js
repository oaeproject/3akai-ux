/*!
 * Copyright 2013 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

define(['require', 'jquery', 'oae.core', 'markdown'], function(require, $, oae) {

    return function(uid, showSettings, widgetData) {

        // Cache the widget container
        var $rootel = $('#' + uid);


        /////////////////////
        // DEFAULT PREVIEW //
        /////////////////////

        // Variable that will keep track of the interval used to check for a finished content preview generation
        var contentPreviewInterval = false;

        /**
         * Render the default preview for all files that don't have a particular in-line preview
         */
        var renderDefault = function() {
            // If the preview status is pending, we show a "Generating" message and
            // re-check every minute whether or not the preview has finished generating.
            // If so, we show the generated preview
            if (widgetData.previews && widgetData.previews.status === 'pending') {
                oae.api.util.template().render($('#filepreview-default-pending-template', $rootel), {'content': widgetData}, $('#filepreview-container', $rootel));
                contentPreviewInterval = setInterval(checkContentPreview, 60000);
            } else {
                oae.api.util.template().render($('#filepreview-default-template', $rootel), {'content': widgetData}, $('#filepreview-container', $rootel));
            }
        };

        /**
         * Check whether or not the content preview status has changed from 'pending' to finished.
         * Once preview processing has finished, we trigger an event that will cause the content
         * profile to refresh.
         */
        var checkContentPreview = function() {
            oae.api.content.getContent(widgetData.id, function(err, contentObj) {
                if (err) {
                    clearInterval(contentPreviewInterval);
                } else if (contentObj.previews && contentObj.previews.status !== 'pending') {
                    clearInterval(contentPreviewInterval);
                    $(document).trigger('oae.content.update', contentObj);
                }
            });
        };


        ///////////////////
        // IMAGE PREVIEW //
        ///////////////////

        /**
         * Render an image preview by embedding the image into the document
         */
        var renderImagePreview = function() {
            oae.api.util.template().render($('#filepreview-image-template', $rootel), {'content': widgetData}, $('#filepreview-container', $rootel));
        };


        ///////////////////////
        // MEDIACORE PREVIEW //
        ///////////////////////

        /**
         * Render a video preview using MediaCore
         */
        var renderMediaCorePreview = function() {
            $.ajax({
                'url': '/api/mediacore/embed/' + widgetData.id,
                'success': function(data) {
                    oae.api.util.template().render($('#filepreview-mediacore-template', $rootel), data, $('#filepreview-container', $rootel));
                }
            });
        };


        //////////////////
        // TEXT PREVIEW //
        //////////////////

        /**
         * Render text preview by embedding the text into the document
         */
        var renderTextPreview = function() {
            $.ajax({
                'url': widgetData.downloadPath,
                'success': function(data) {
                    widgetData.textContent = data;
                    var $template = $('#filepreview-text-template', $rootel);
                    // Use the markdown template for .md files
                    if (widgetData.mime === 'text/x-markdown' || widgetData.filename.match(/\.md/)) {
                        $template = $('#filepreview-markdown-template', $rootel);
                    }
                    oae.api.util.template().render($template, {'content': widgetData}, $('#filepreview-container', $rootel));
                }
            });
        };


        ////////////////////
        // INITIALISATION //
        ////////////////////

        /**
         * Render the file's preview based on its type
         */
        var initFilePreview = function() {
            // Image preview
            if (widgetData.mime.substring(0, 6) === 'image/') {
                renderImagePreview();
            // MediaCore video preview
            // @see http://mediacore.com/
            } else if (widgetData.previews.mediaCoreId) {
                renderMediaCorePreview();
            } else if (widgetData.mime === 'text/plain' || widgetData.mime === 'text/x-markdown') {
                renderTextPreview();
            // Default preview
            } else {
                renderDefault();
            }
        };

        initFilePreview();

    };
});

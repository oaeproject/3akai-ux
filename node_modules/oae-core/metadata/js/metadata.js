/*
 * Licensed to the Sakai Foundation (SF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The SF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */

define(['jquery', 'oae.core', 'jquery.jeditable'], function($, oae) {

    return function(uid, showSettings) {

        /**
         * Initializes the jEditable field in the metadata container that saves the
         * description of a content item
         * @param  {Object}   ctx   The content profile information
         */
        var initEditable = function(ctx) {
            /**
             * Saves the edited description
             *
             * @param   {String}   value   The new value for the item
             * @return  {String}   value   The value to show in the editable field after editing completed
             */
            var editableSubmitted = function(value) {
                var prevValue = this.revert;
                if (!value) {
                    return prevValue;
                } else {
                    // Save the description to the content profile
                    $.ajax({
                        'url': '/api/content/' + ctx.id,
                        'type': 'POST',
                        'data': {
                            'description': value
                        }
                    });
                    return value;
                }
            };

            if (ctx.isManager) {
                // Apply jEditable for inline editing of the content description
                $('#metadata-description.jeditable-field').editable(editableSubmitted, {
                    'onblur': 'submit',
                    'type': 'textarea',
                    'placeholder': oae.api.i18n.translate('__MSG__NO_DESCRIPTION_PROVIDED__', 'metadata')
                });

                // Apply jQuery Tooltip
                $('#metadata-description[rel="tooltip"]').tooltip();
            }
        };

        /**
         * Renders the metadata in the sidebar
         *
         * @param  {Object}   ctx   The content profile information
         */
        var renderMetadata = function(ctx) {
            oae.api.util.template().render('#metadata-data-template', {'data': ctx}, $('#metadata-data-container'));
            initEditable(ctx);
        };

        /**
         * Gets the members of the displayed content item
         *
         * @param  {Object}   ctx   The content profile information
         */
        var getMembers = function(ctx) {
            oae.api.content.getMembers(ctx.id, null, 9, function(error, data) {
                if (!error) {
                    ctx.members = data.results;
                }
                renderMetadata(ctx);
            });
        };

        /**
         * Toggles the view mode of the widget
         */
        var initToggle = function() {
            $('.metadata-toggle-widget').on('click', function() {
                $('#metadata-container > div').toggle();

                // Change column sizes in a row
                if ($('#metadata-container > div:first-child:visible').length) {
                    $('.oae-main-content .row-fluid > div:first-child').toggleClass('span11 span9');
                    $('.oae-main-content .row-fluid > div:last-child').toggleClass('span1 span3');
                } else {
                    $('.oae-main-content .row-fluid > div:first-child').toggleClass('span9 span11');
                    $('.oae-main-content .row-fluid > div:last-child').toggleClass('span3 span1');
                }
            });
        };

        /**
         * Binds to the context event of the content profile page.
         * When the context is retrieved the metadata will be shown.
         */
        var initGetContext = function() {
            // Trigger and bind an event that will ask for the context of the widget
            $(document).on('oae.context.send', function(ev, ctx) {
                getMembers(ctx);
            });
            $(document).trigger('oae.context.get');
        };

        initGetContext();
        initToggle();

    };
});

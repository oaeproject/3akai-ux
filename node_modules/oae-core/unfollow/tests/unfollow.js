casper.test.begin('Widget - Unfollow', function(test) {

    /**
     * Open the delete resources modal with assertions
     */
    var verifyUnfollowingModal = function() {
        casper.waitForSelector('li.oae-list-actions + li .oae-list-grid-item input[type="checkbox"]', function() {
            casper.click('li.oae-list-actions + li .oae-list-grid-item input[type="checkbox"]');
            test.assertExists('#network-widget .oae-list-header-actions button.oae-trigger-unfollow:not([disabled])', 'Verify that the unfollow button is enabled after user selection');
            casper.click('#network-widget .oae-list-header-actions button.oae-trigger-unfollow');
            casper.waitUntilVisible('#unfollow-modal', function() {
                test.assertVisible('#unfollow-modal', 'Verify that the unfollow pane is showing after trigger');
                casper.click('li.oae-list-actions + li .oae-list-grid-item input[type="checkbox"]');
            });
        });
    };

    /**
     * Open the delete resources modal
     */
    var openUnfollowingModal = function() {
        casper.waitForSelector('li.oae-list-actions + li .oae-list-grid-item input[type="checkbox"]', function() {
            casper.click('li.oae-list-actions + li .oae-list-grid-item input[type="checkbox"]');
            casper.click('#network-widget .oae-list-header-actions button.oae-trigger-unfollow');
            casper.waitUntilVisible('#unfollow-modal', function() {
                casper.click('li.oae-list-actions + li .oae-list-grid-item input[type="checkbox"]');
            });
        });
    };

    /**
     * Verify that the unfollow elements are present
     */
    var verifyUnfollowingElements = function() {
        // Verify that the users that will be unfollowed are listed
        test.assertExists('#unfollow-modal #unfollow-selected-container li', 'Verify that the users that will be unfollowed are listed');
        // Verify there is a confirmation message shown in the UI
        test.assertExists('#unfollow-modal #unfollow-list-container h4', 'Verify that a confirmation message is shown before unfollowing the users');
        // Verify the cancel button is present
        test.assertExists('#unfollow-modal .modal-footer button[data-dismiss="modal"]', 'Verify that the cancel button is present');
        // Verify the unfollow button is present
        test.assertExists('#unfollow-modal .modal-footer button#unfollow-unfollow', 'Verify that the \'Unfollow\' button is present');
    };

    /**
     * Verify unfollowing a user
     */
    var verifyUnfollowingUser = function() {
        casper.click('#unfollow-modal .modal-footer button#unfollow-unfollow');
        casper.waitForSelector('#oae-notification-container .alert', function() {
            test.assertDoesntExist('#oae-notification-container .alert.alert-error', 'Verify a user can be unfollowed');
            // Verify that the user is removed from the list when unfollowed
            test.assertDoesntExist('#network-widget #network-following .oae-list li:first-child + li', 'Verify an unfollowed user is removed from the following list');
        });
    };

    casper.start(configUtil().tenantUI, function() {
        // Create a couple of users to test with
        var user1 = null;
        var user2 = null;
        userUtil().createUsers(2, function(users) {
            user1 = users[0];
            user2 = users[1];
        });

        // Login with that user
        casper.then(function() {
            userUtil().doLogIn(user1.username, configUtil().defaultUserPassword);
        });

        casper.then(function() {
            // User1 follows user 2
            followUtil().follow(user2.id, function() {
                casper.thenOpen(configUtil().tenantUI + '/me/network', function() {
                    casper.then(function() {
                        casper.echo('Verify unfollowing modal', 'INFO');
                        casper.waitForSelector('#network-widget .oae-list.oae-list-grid li', verifyUnfollowingModal);
                    });

                    casper.then(function() {
                        casper.echo('Verify unfollowing elements', 'INFO');
                        verifyUnfollowingElements();
                    });

                    casper.then(function() {
                        casper.echo('Verify unfollowing a user', 'INFO');
                        verifyUnfollowingUser();
                    });
                });
            });
        });

        // Log out at the end of the test
        casper.then(function() {
            userUtil().doLogOut();
        });
    });

    casper.run(function() {
        test.done();
    });
});

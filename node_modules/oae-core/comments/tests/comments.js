casper.test.begin('Widget - Comments', function(test) {

    /**
     * Verify that a comment can be placed on a content item
     */
    var verifyPlacingComment = function() {
        casper.waitForSelector('.comments-new-comment-form', function() {
            // Verify that the form exists
            test.assertExists('.comments-new-comment-form', 'The comments form is present');
            // Verify the textarea in the form exists
            test.assertExists('.comments-new-comment-form textarea#comments-new-comment', 'The comments comment textarea is present');
            // Verify the submit button in the form exists
            test.assertExists('.comments-new-comment-form button[type="submit"]', 'The comments submit button is present');
            // Fill the form
            casper.fill('.comments-new-comment-form', {
                'comments-new-comment': 'New Test comment'
            });
            // Submit the form
            casper.click('.comments-new-comment-form button[type="submit"]');
            // Wait for the comment to show up in the list
            casper.waitForSelector('.comments-level-0', function() {
                // Verify that the comment was placed
                test.assertSelectorHasText('.comments-level-0 .media-body', 'Test comment', 'The comment was successfully placed');
                // Verify there is a reply button
                test.assertExists('.comments-level-0 .media-body .comments-reply-button', 'The reply button is present on the new comment');
                // Verify there is a delete button
                test.assertExists('.comments-level-0 .media-body .comments-delete-button', 'The delete button is present on the new comment');
            });
        });
    };

    /**
     * Verify that replies can be made on comments
     */
    var verifyReplyToComment = function() {
        // Click the reply button
        casper.click('.comments-level-0 .media-body .comments-reply-button');
        // Verify that the reply form is shown
        test.assertExists('.comments-reply-container form.comments-new-reply-form', 'The reply form is present');
        // Verify that the reply textarea is shown
        test.assertExists('.comments-reply-container form.comments-new-reply-form textarea', 'The reply textarea is present');
        // Verify that the reply form submit button is shown
        test.assertExists('.comments-reply-container form.comments-new-reply-form button[type="submit"]', 'The reply submit button is present');
        // Fill the form
        casper.fill('.comments-reply-container form.comments-new-reply-form', {
            'comments-new-reply': 'New reply to comment'
        });
        // Submit the form
        casper.click('.comments-reply-container form.comments-new-reply-form button[type="submit"]');
        // Wait for the reply to show up in the list
        casper.waitForSelector('.comments-level-1', function() {
            // Verify that the comment was placed
            test.assertSelectorHasText('.comments-level-1 .media-body', 'New reply to comment', 'The reply was successfully placed');
            // Verify there is a reply button
            test.assertExists('.comments-level-1 .media-body .comments-reply-button', 'The reply button is present on the new reply');
            // Verify there is a delete button
            test.assertExists('.comments-level-1 .media-body .comments-delete-button', 'The delete button is present on the new reply');
        });
    };

    /**
     * Verify comments and replies can be deleted
     */
    var verifyDeletingComment = function() {
        // Delete the top level comment
        casper.click('.comments-level-0 .media-body .comments-delete-button');
        // Wait for the confirmation modal to pop up
        casper.waitForSelector('#deletecomment-modal', function() {
            // Verify that all delete confirmation elements are present
            test.assertExists('#deletecomment-modal .alert-danger', 'The confirmation message is shown in the delete comment modal');
            test.assertExists('#deletecomment-modal .modal-footer button[data-dismiss="modal"]', 'The cancel button is shown in the delete comment modal');
            test.assertExists('#deletecomment-modal .modal-footer button#deletecomment-delete', 'The confirmation button is shown in the delete comment modal');
            // Confirm that the comment should be deleted
            casper.click('#deletecomment-modal .modal-footer button#deletecomment-delete');
            // Verify the top level comment was soft-deleted
            casper.waitForSelector('.comments-level-0.deleted', function() {
                test.assertExists('.comments-level-0.deleted', 'The top level comment was successfully soft deleted');
                // Delete the reply to the top level comment
                casper.click('.comments-level-1 .media-body .comments-delete-button');
                // Wait for the confirmation modal to pop up
                casper.waitForSelector('#deletecomment-modal', function() {
                    // Confirm that the comment should be deleted
                    casper.click('#deletecomment-modal .modal-footer button#deletecomment-delete');
                    // Verify the reply was deleted
                    casper.waitWhileSelector('.comments-level-1', function() {
                        test.assertDoesntExist('.comments-level-1', 'The reply to the top level comment was successfully deleted');
                    });
                });
            });
        });
    };

    casper.start(configUtil().tenantUI, function() {
        // Create a user to test comments with
        var user1 = null;
        userUtil().createUsers(1, function(users) {
            user1 = users[0];
        });

        // Login with that user
        casper.then(function() {
            userUtil().doLogIn(user1.username, configUtil().defaultUserPassword);
        });

        // Create a content item
        casper.then(function() {
            contentUtil().createFile(null, function(contentUrl) {
                // Redirect to the content page
                casper.thenOpen(configUtil().tenantUI + contentUrl, function() {
                    // Verify placing a comment
                    casper.then(function() {
                        casper.echo('Verify placing a new comment', 'INFO');
                        verifyPlacingComment();
                    });

                    // Verify replying to a comment
                    casper.then(function() {
                        casper.echo('Verify replying to a comment', 'INFO');
                        verifyReplyToComment();
                    });

                    // Verify deleting a comment
                    casper.then(function() {
                        casper.echo('Verify deleting a comment', 'INFO');
                        verifyDeletingComment();
                    });
                });
            });
        });

        // Log user out
        casper.then(function() {
            userUtil().doLogOut();
        });
    });

    casper.run(function() {
        test.done();
    });
});

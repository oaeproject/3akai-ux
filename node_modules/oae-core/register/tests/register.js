casper.test.begin('Widget - Register', function(test) {

    /**
     * Verify that the register form can be opened and is visible
     */
    var verifyOpenRegister = function() {
        casper.waitForSelector('#topnavigation-left > button.oae-trigger-register', function(){
            test.assertExists('#topnavigation-left > button.oae-trigger-register', 'Register trigger exists');
            casper.click('#topnavigation-left > button.oae-trigger-register');
            // TODO: When widgets have an event that indicates it's done loading this wait needs to be replaced
            casper.wait(3000, function(){
                test.assertVisible('#register-modal','The register modal is shown after trigger');
            });
        });
    };

    /**
     * Verify that the complete register form is available
     */
    var verifyRegisterForm = function() {
        test.assertExists('form#register-form','The register form is present');
        test.assertExists('#register-firstname','The register form firstName field is present');
        test.assertExists('#register-lastname','The register form lastName field is present');
        test.assertExists('#register-email','The register form email field is present');
        test.assertExists('#register-username','The register form username field is present');
        test.assertExists('#register-password','The register form password field is present');
        test.assertExists('#register-password-repeat','The register form password_repeat field is present');
        test.assertExists('#register-modal input#register-accept-terms-and-conditions', 'The register form terms and conditions checkbox is present');
    };

    /**
     * Submit the following forms and validate that there is an error:
     *  - form completly empty
     *  - form without first name
     *  - form without last name
     *  - form without email
     *  - form without username
     *  - form without password
     *  - form without repeat password
     *  - form with invalid email
     *  - form with not matching passwords
     *  - form with too short password
     *  - form with too short username
     *  - form with an already in use username
     *
     * @param   {String}    Username that is already in use
     */
    var verifyRegisterFormValidation = function(username) {
        casper.waitForSelector('form#register-form', function() {
            // Empty form
            casper.fill('form#register-form',{
                'firstName'       : '',
                'lastName'        : '',
                'email'           : '',
                'username'        : '',
                'password'        : '',
                'password_repeat' : ''
            }, true);
            test.assertVisible('#firstName-error','Verify validating empty register form, firstName error is visible');
            test.assertVisible('#lastName-error','Verify validating empty register form, lastName error is visible');
            test.assertVisible('#email-error','Verify validating empty register form, email error is visible');
            test.assertVisible('#username-error','Verify validating empty register form, username error is visible');
            test.assertVisible('#password-error','Verify validating empty register form, password error is visible');
            test.assertVisible('#password_repeat-error','Verify validating empty register form, password_repeat error is visible');
            test.assertVisible('#termsandconditions-error', 'Verify validating empty register form, termsandconditions-error is visible');

            // Form with non-accepted terms and conditions
            casper.fill('form#register-form',{
                'firstName'       : 'John',
                'lastName'        : 'Doe',
                'email'           : 'JohnDoe@hotmail.com',
                'username'        : 'jdoe',
                'password'        : 'password',
                'password_repeat' : 'password'
            }, true);
            test.assertNotVisible('#firstName-error','Verify validating terms and conditions, firstName error is not visible');
            test.assertNotVisible('#lastName-error','Verify validating terms and conditions, lastName error is not visible');
            test.assertNotVisible('#email-error','Verify validating terms and conditions, email error is not visible');
            test.assertNotVisible('#username-error','Verify validating terms and conditions, username error is not visible');
            test.assertNotVisible('#password-error','Verify validating terms and conditions, password error is not visible');
            test.assertNotVisible('#password_repeat-error','Verify validating terms and conditions, password_repeat error is not visible');
            test.assertVisible('#termsandconditions-error', 'Verify validating terms and conditions, termsandconditions-error is visible');

            // Form without firstName
            casper.fill('form#register-form',{
                'firstName'       : '',
                'lastName'        : 'Doe',
                'email'           : 'JohnDoe@hotmail.com',
                'username'        : 'jdoe',
                'password'        : 'password',
                'password_repeat' : 'password',
                'termsandconditions': 'checked'
            }, true);
            test.assertVisible('#firstName-error','Verify validating empty first name, firstName error is visible');
            test.assertNotVisible('#lastName-error','Verify validating empty first name, lastName error is not visible');
            test.assertNotVisible('#email-error','Verify validating empty first name, email error is not visible');
            test.assertNotVisible('#username-error','Verify validating empty first name, username error is not visible');
            test.assertNotVisible('#password-error','Verify validating empty first name, password error is not visible');
            test.assertNotVisible('#password_repeat-error','Verify validating empty first name, password_repeat error is not visible');
            test.assertNotVisible('#termsandconditions-error', 'Verify validating empty first name, termsandconditions-error is not visible');

            // Form without lastName
            casper.fill('form#register-form',{
                'firstName'       : 'John',
                'lastName'        : '',
                'email'           : 'JohnDoe@hotmail.com',
                'username'        : 'jdoe',
                'password'        : 'password',
                'password_repeat' : 'password',
                'termsandconditions': 'checked'
            }, true);
            test.assertNotVisible('#firstName-error','Verify validating empty last name, firstName error is not visible');
            test.assertVisible('#lastName-error','Verify validating empty last name, lastName error is visible');
            test.assertNotVisible('#email-error','Verify validating empty last name, email error is not visible');
            test.assertNotVisible('#username-error','Verify validating empty last name, username error is not visible');
            test.assertNotVisible('#password-error','Verify validating empty last name, password error is not visible');
            test.assertNotVisible('#password_repeat-error','Verify validating empty last name, password_repeat error is not visible');
            test.assertNotVisible('#termsandconditions-error', 'Verify validating empty last name, termsandconditions-error is not visible');

            // Form without email
            casper.fill('form#register-form',{
                'firstName'       : 'John',
                'lastName'        : 'Doe',
                'email'           : '',
                'username'        : 'jdoe',
                'password'        : 'password',
                'password_repeat' : 'password',
                'termsandconditions': 'checked'
            }, true);
            test.assertNotVisible('#firstName-error','Verify validating empty email, firstName error is not visible');
            test.assertNotVisible('#lastName-error','Verify validating empty email, lastName error is not visible');
            test.assertVisible('#email-error','Verify validating empty email, email error is visible');
            test.assertNotVisible('#username-error','Verify validating empty email, username error is not visible');
            test.assertNotVisible('#password-error','Verify validating empty email, password error is not visible');
            test.assertNotVisible('#password_repeat-error','Verify validating empty email, password_repeat error is not visible');
            test.assertNotVisible('#termsandconditions-error', 'Verify validating empty email, termsandconditions-error is not visible');

            // Form without username
            casper.fill('form#register-form',{
                'firstName'       : 'John',
                'lastName'        : 'Doe',
                'email'           : 'JohnDoe@hotmail.com',
                'username'        : '',
                'password'        : 'password',
                'password_repeat' : 'password',
                'termsandconditions': 'checked'
            }, true);
            test.assertNotVisible('#firstName-error','Verify validating empty username, firstName error is not visible');
            test.assertNotVisible('#lastName-error','Verify validating empty username, lastName error is not visible');
            test.assertNotVisible('#email-error','Verify validating empty username, email error is not visible');
            test.assertVisible('#username-error','Verify validating empty username, username error is visible');
            test.assertNotVisible('#password-error','Verify validating empty username, password error is not visible');
            test.assertNotVisible('#password_repeat-error','Verify validating empty username, password_repeat error is not visible');
            test.assertNotVisible('#termsandconditions-error', 'Verify validating empty username, termsandconditions-error is not visible');

            // Form without password
            casper.fill('form#register-form',{
                'firstName'       : 'John',
                'lastName'        : 'Doe',
                'email'           : 'JohnDoe@hotmail.com',
                'username'        : 'jdoe',
                'password'        : '',
                'password_repeat' : 'password',
                'termsandconditions': 'checked'
            }, true);
            test.assertNotVisible('#firstName-error','Verify validating empty password, firstName error is not visible');
            test.assertNotVisible('#lastName-error','Verify validating empty password, lastName error is not visible');
            test.assertNotVisible('#email-error','Verify validating empty password, email error is not visible');
            test.assertNotVisible('#username-error','Verify validating empty password, username error is not visible');
            test.assertVisible('#password-error','Verify validating empty password, password error is visible');
            test.assertVisible('#password_repeat-error','Verify validating empty password, password_repeat error is visible');
            test.assertNotVisible('#termsandconditions-error', 'Verify validating empty password, termsandconditions-error is not visible');

            // Form without password_repeat
            casper.fill('form#register-form',{
                'firstName'       : 'John',
                'lastName'        : 'Doe',
                'email'           : 'JohnDoe@hotmail.com',
                'username'        : 'jdoe',
                'password'        : 'password',
                'password_repeat' : '',
                'termsandconditions': 'checked'
            }, true);
            test.assertNotVisible('#firstName-error','Verify validating empty repeated password, firstName error is not visible');
            test.assertNotVisible('#lastName-error','Verify validating empty repeated password, lastName error is not visible');
            test.assertNotVisible('#email-error','Verify validating empty repeated password, email error is not visible');
            test.assertNotVisible('#username-error','Verify validating empty repeated password, username error is not visible');
            test.assertNotVisible('#password-error','Verify validating empty repeated password, password error is not visible');
            test.assertVisible('#password_repeat-error','Verify validating empty repeated password, password_repeat error is visible');
            test.assertNotVisible('#termsandconditions-error', 'Verify validating empty repeated password, termsandconditions-error is not visible');

            // Form with wrong password_repeat
            casper.fill('form#register-form',{
                'firstName'       : 'John',
                'lastName'        : 'Doe',
                'email'           : 'JohnDoe@hotmail.com',
                'username'        : 'jdoe',
                'password'        : 'password',
                'password_repeat' : 'somethingelse',
                'termsandconditions': 'checked'
            }, true);
            test.assertNotVisible('#firstName-error','Verify validating incorrect repeated password, firstName error is not visible');
            test.assertNotVisible('#lastName-error','Verify validating incorrect repeated password, lastName error is not visible');
            test.assertNotVisible('#email-error','Verify validating incorrect repeated password, email error is not visible');
            test.assertNotVisible('#username-error','Verify validating incorrect repeated password, username error is not visible');
            test.assertNotVisible('#password-error','Verify validating incorrect repeated password, password error is not visible');
            test.assertVisible('#password_repeat-error','Verify validating incorrect repeated password, password_repeat error is visible');
            test.assertNotVisible('#termsandconditions-error', 'Verify validating repeated password, termsandconditions-error is not visible');

            // Form with wrong email
            casper.fill('form#register-form',{
                'firstName'       : 'John',
                'lastName'        : 'Doe',
                'email'           : 'faulty.com',
                'username'        : 'jdoe',
                'password'        : 'password',
                'password_repeat' : 'password',
                'termsandconditions': 'checked'
            }, true);
            test.assertNotVisible('#firstName-error','Verify validating invalid email, firstName error is not visible');
            test.assertNotVisible('#lastName-error','Verify validating invalid email, lastName error is not visible');
            test.assertVisible('#email-error','Verify validating invalid email, email error is visible');
            test.assertNotVisible('#username-error','Verify validating invalid email, username error is not visible');
            test.assertNotVisible('#password-error','Verify validating invalid email, password error is not visible');
            test.assertNotVisible('#password_repeat-error','Verify validating invalid email, password_repeat error is not visible');
            test.assertNotVisible('#termsandconditions-error', 'Verify validating invalid email, termsandconditions-error is not visible');

            // Form with too short password
            casper.fill('form#register-form',{
                'firstName'       : 'John',
                'lastName'        : 'Doe',
                'email'           : 'JohnDoe@hotmail.com',
                'username'        : 'jdoe',
                'password'        : 'pw',
                'password_repeat' : 'pw',
                'termsandconditions': 'checked'
            }, true);
            test.assertNotVisible('#firstName-error','Verify validating too short password, firstName error is not visible');
            test.assertNotVisible('#lastName-error','Verify validating too short password, lastName error is not visible');
            test.assertNotVisible('#email-error','Verify validating too short password, email error is not visible');
            test.assertNotVisible('#username-error','Verify validating too short password, username error is not visible');
            test.assertVisible('#password-error','Verify validating too short password, password error is visible');
            test.assertNotVisible('#password_repeat-error','Verify validating too short password, password_repeat error is not visible');
            test.assertNotVisible('#termsandconditions-error', 'Verify validating too short password, termsandconditions-error is not visible');

            // Form with too short username
            casper.fill('form#register-form',{
                'firstName'       : 'John',
                'lastName'        : 'Doe',
                'email'           : 'JohnDoe@hotmail.com',
                'username'        : 'Jo',
                'password'        : 'password',
                'password_repeat' : 'password',
                'termsandconditions': 'checked'
            }, true);
            test.assertNotVisible('#firstName-error','Verify validating incorrect username, firstName error is not visible');
            test.assertNotVisible('#lastName-error','Verify validating incorrect username, lastName error is not visible');
            test.assertNotVisible('#email-error','Verify validating incorrect username, email error is not visible');
            test.assertVisible('#username-error','Verify validating incorrect username, username error is visible');
            test.assertNotVisible('#password-error','Verify validating incorrect username, password error is not visible');
            test.assertNotVisible('#password_repeat-error','Verify validating incorrect username, password_repeat error is not visible');
            test.assertNotVisible('#termsandconditions-error', 'Verify validating incorrect username, termsandconditions-error is not visible');

            // Form with an already existing username
            casper.fill('form#register-form',{
                'firstName'       : 'John',
                'lastName'        : 'Doe',
                'email'           : 'JohnDoe@hotmail.com',
                'username'        : username,
                'password'        : 'password',
                'password_repeat' : 'password',
                'termsandconditions': 'checked'
            }, true);
            test.assertNotVisible('#firstName-error','Verify validating taken username, firstName error is not visible');
            test.assertNotVisible('#lastName-error','Verify validating taken username, lastName error is not visible');
            test.assertNotVisible('#email-error','Verify validating taken username, email error is not visible');
            test.assertVisible('#username-error','Verify validating taken username, username error is visible');
            test.assertNotVisible('#password-error','Verify validating taken username, password error is not visible');
            test.assertNotVisible('#password_repeat-error','Verify validating taken username, password_repeat error is not visible');
            test.assertNotVisible('#termsandconditions-error', 'Verify validating taken username, termsandconditions-error is not visible');
        });
    };

    /**
     * Verifies that a user can register through the widget
     */
    var verifyRegisteringUser = function() {
        casper.waitForSelector('form#register-form', function() {
            casper.fill('form#register-form', {
                'firstName': 'John',
                'lastName': 'Doe',
                'email': 'jd@gmail.com',
                'username': 'johndoe-' + mainUtil().generateRandomString(),
                'password': 'testtest',
                'password_repeat': 'testtest'
            }, false);
            test.assertExists('#register-create-account', 'Verify submit register form button exists and submit');
            casper.click('#register-create-account');

            casper.waitForSelector('#me-clip-container h1', function() {
                test.assertExists('#me-clip-container h1', 'Verify user is logged in after registration');
                test.assertSelectorHasText('#me-clip-container h1', 'John Doe', 'Logged in user is John Doe');
                userUtil().doLogOut();
            });
        });
    };

    casper.start(configUtil().tenantUI, function(){
        // Make an user to test with
        var user1 = null;
        userUtil().createUsers(1, function(users) {
            user1 = users[0];
        });

        // Verify that the register form can be opened
        casper.then(function() {
            casper.echo('Verify register modal','INFO');
            verifyOpenRegister();
        });

        // Verify that the register form is available
        casper.then(function() {
            casper.echo('Verify register form elements','INFO');
            verifyRegisterForm();
        });

        // Verify that all the errors are shown when there is wrong or no input
        casper.then(function() {
            casper.echo('Verify register form validation','INFO');
            verifyRegisterFormValidation(user1.username);
        });

        // Verify registering a user
        casper.then(function() {
            casper.echo('Verify registering a user','INFO');
            verifyRegisteringUser(user1.username);
        });
    });

    casper.run(function() {
        test.done();
    });
});

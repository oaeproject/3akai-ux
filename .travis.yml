language: node_js
node_js:
  - 0.10

branches:
  only:
    - master

before_install:
  # Turn off unneeded services to free some memory
  - sudo service mysql stop
  - sudo service memcached stop
  - sudo service postgresql stop

  # Create a couple of possible tenants in the hosts file
  - sudo sed -e 's/^\(127\.0\.0\.1.*\)$/\1 admin.oae.com cam.oae.com/' --in-place /etc/hosts
  - sudo sed -e 's/^\(::1.*\)$/\1 admin.oae.com cam.oae.com/' --in-place /etc/hosts

  # Add any apt repos we might need
  - echo "deb http://debian.datastax.com/community stable main" | sudo tee -a /etc/apt/sources.list.d/dsc.sources.list
  - curl -L http://debian.datastax.com/debian/repo_key | sudo apt-key add -
  - sudo add-apt-repository -y ppa:nginx/stable
  - sudo apt-get update

  # Hilary dependencies
  - sudo apt-get install -qq graphicsmagick
  - sudo apt-get install -y -o Dpkg::Options::=--force-confnew cassandra=1.2.15 dsc12
  - sudo sed -i 's/-Xss180k/-Xss256k/g' /etc/cassandra/cassandra-env.sh
  - sudo sh -c "echo 'JVM_OPTS=\"\${JVM_OPTS} -Djava.net.preferIPv4Stack=false\"' >> /etc/cassandra/cassandra-env.sh"
  - sudo service cassandra stop
  - sudo service cassandra start
  - sudo service cassandra status
  - sudo apt-get install nginx-full
  - npm install -g grunt-cli

  # Install etherpad-lite
  - cd ..
  - wget https://s3-eu-west-1.amazonaws.com/oae-testing/travisci/etherpad-lite.tar.gz
  - tar -xzf etherpad-lite.tar.gz
  - cd etherpad-lite
  - node src/node/server.js &
  - cd ..

  # 3akai-ux dependencies
  - wget https://phantomjs.googlecode.com/files/phantomjs-1.9.2-linux-i686.tar.bz2
  - tar xjf phantomjs-1.9.2-linux-i686.tar.bz2
  - sudo ln -fs pwd/phantomjs-1.9.2-linux-i686/bin/phantomjs /usr/local/bin/phantomjs
  - git clone git://github.com/n1k0/casperjs.git
  - cd casperjs
  - git checkout 1.0.3
  - sudo ln -sf `pwd`/bin/casperjs /usr/local/bin/casperjs

  # Configure 3akai-ux / nginx
  - cd ../3akai-ux
  - npm install
  - "echo '{\"NGINX_USER\": \"root\",\"NGINX_GROUP\": \"root\",\"NGINX_HOSTNAME\": \"admin.oae.com\",\"UX_HOME\": \"/home/travis/build/oaeproject/3akai-ux\",\"LOCAL_FILE_STORAGE_DIRECTORY\": \"/home/travis/build/oaeproject/files\"}' > nginx/nginx.json"
  - grunt configNginx
  - sudo cp ./target/optimized/nginx/nginx.conf /etc/nginx/nginx.conf
  - sudo mkdir /usr/share/nginx/logs
  - sudo service nginx start

  # Install Hilary and create our test tenant
  - git clone  --branch master --depth=1 git://github.com/oaeproject/Hilary.git ../Hilary
  - cd ../Hilary
  - npm install --production
  - node app.js &
  - sleep 20
  - ADMIN_COOKIE=$(curl -s --cookie-jar - -d"username=administrator" -d"password=administrator"  -e "/" http://admin.oae.com/api/auth/login | grep connect.sess | cut -f 7)
  - curl --cookie connect.sess=${ADMIN_COOKIE} -e "/" -d"alias=cam" -d"displayName=Cambridge" -d"host=cam.oae.com" http://admin.oae.com/api/tenant/create
  - curl --cookie connect.sess=${ADMIN_COOKIE} -e "/" -d"oae-principals/recaptcha/enabled=false" http://admin.oae.com/api/config

  # Position ourselves to start the tests
  - cd ../3akai-ux

services:
  - elasticsearch
  - rabbitmq
  - redis-server

script:
  - grunt test --qunit-host cam.oae.com

notifications:
  email:
    - oae-team@collab.sakaiproject.org
  irc: "irc.freenode.org#sakai"
